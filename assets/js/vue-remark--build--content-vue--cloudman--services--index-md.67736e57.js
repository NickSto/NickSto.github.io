(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{"3u0d":function(e,t,o){"use strict";o.r(t);var r=o("KHd+"),a=o("UQSp"),n=o("Kw5r");function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}n.a.config.optionMergeStrategies;var s={VueRemarkRoot:a.a},l=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(s).forEach((function(e){"object"===i(s[e])&&"function"==typeof s[e].render||"function"==typeof s[e]&&"function"==typeof s[e].options.render?t[e]=s[e]:o[e]=function(){return s[e]}}))},c=n.a.config.optionMergeStrategies,u="__vueRemarkFrontMatter",p={excerpt:null};var d=function(e){e.options[u]&&(e.options[u]=p),n.a.util.defineReactive(e.options,u,p),e.options.computed=c.computed({$frontmatter:function(){return e.options[u]}},e.options.computed)},v=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[e._t("/cloudman/header"),e._t("/cloudman/linkbox-horizontal"),o("p",[e._v("CloudMan manages a set of applications that are referred to as "),o("em",[e._v("services")]),e._v(". Some of the services are user-facing applications (e.g., Galaxy) while others are dependencies for other services and are not used by end-users directly (e.g., NodeJSProxy). A complete list of services managed by CloudMan is available on the CloudMan Admin page; that page also allows you to control the state of those services. Below if a list of the available services; if additional information is available about a specific service, it is available by clicking on the service name:")]),o("ul",[o("li",[o("a",{attrs:{href:"/cloudman/services/pss/"}},[e._v("Post Start Script (PSS)")]),e._v(" - a custom script provided via a URL that's run at the end of the server bootstrap process")]),o("li",[o("a",{attrs:{href:"/cloudman/services/cloudera-manager/"}},[e._v("Cloudera Manager")]),e._v(" - an service manager used to deploy Big Data services (e.g., Hadoop)")]),o("li",[o("a",{attrs:{href:"/cloudman/services/cloudgene/"}},[e._v("Cloudgene")]),e._v(" - a graphical user interface application for Hadoop-based workflows")]),o("li",[o("a",{attrs:{href:"/cloudman/services/galaxy/"}},[e._v("Galaxy")]),e._v(" - the flagship service with more information available throughout this wiki; the application is available at the instance root URL/IP")]),o("li",[e._v("Nginx - a proxy server used to serve static content and proxy URIs to local service ports")]),o("li",[e._v("NodeJSProxy - a NodeJS proxy server used by the IPython Interactive Environment")]),o("li",[e._v("Postgres - a dedicated, production-quality database used by Galaxy")]),o("li",[e._v("ProFTPd - an FTP server used to upload large files into Galaxy")]),o("li",[o("a",{attrs:{href:"/cloudman/services/pulsar/"}},[e._v("Pulsar")]),e._v(" - a remote job execution engine for Galaxy enabling cloud-bursting")]),o("li",[o("a",{attrs:{href:"https://computing.llnl.gov/linux/slurm/slurmctld.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slurmctld")]),e._v(" - central management daemon for the Slurm job manager")]),o("li",[o("a",{attrs:{href:"https://computing.llnl.gov/linux/slurm/slurmd.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slurmd")]),e._v(" - compute node daemon for the Slurm job manager")]),o("li",[e._v("Supervisor - "),o("a",{attrs:{href:"http://supervisord.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Supervisord")]),e._v(" daemon used to manage select services (e.g., NodeJSProxy)")])]),o("p",[e._v("It is possible to add additional service to CloudMan by implementing a "),o("a",{attrs:{href:"https://github.com/galaxyproject/cloudman/blob/master/cm/services/__init__.py#L290",target:"_blank",rel:"noopener noreferrer"}},[e._v("service interface")]),e._v(" for the given application. "),o("a",{attrs:{href:"https://github.com/galaxyproject/cloudman/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("Get in touch with us")]),e._v(" if you're interested in adding a new service.")])],2)}),[],!1,null,null,null);"function"==typeof l&&l(v),"function"==typeof d&&d(v);t.default=v.exports},UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);