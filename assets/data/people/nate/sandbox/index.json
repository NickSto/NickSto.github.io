{"hash":"eaf962330836a104724e8b210d95933603316eda","data":{"article":{"id":"1b7d412dac399c09cdf578f7100f8671","title":"","tease":"","category":null,"date":null,"days":null,"contact":"","contact_url":"","authors":"","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"redirect":"","links":[],"image":"","images":{},"external_url":"","content":"<div class=\"toc-wrapper col-md-3\">\n<ul>\n<li>\n<p><a href=\"#drmaa\">DRMAA</a></p>\n<ul>\n<li><a href=\"#dependencies\">Dependencies</a></li>\n<li><a href=\"#parameters-and-configuration\">Parameters and Configuration</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"body-wrapper col-md-9\">\n<p>Forthcoming edits to <a href=\"/admin/config/performance/cluster/\">Admin/Config/Performance/Cluster</a>:</p>\n<h2 id=\"drmaa\"><a href=\"#drmaa\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>DRMAA</h2>\n<h3 id=\"dependencies\"><a href=\"#dependencies\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Dependencies</h3>\n<p>Galaxy interfaces with DRMAA via <a href=\"http://code.google.com/p/drmaa-python/\" target=\"_blank\" rel=\"noopener noreferrer\">drmaa-python</a>.  The drmaa-python module is provided with Galaxy, but you must tell it where your DRM's DRMAA library is located, via the <code>$DRMAA_LIBRARY_PATH</code> environment variable, or the <code>drmaa_library_path</code> runner plugin param in <code>job_conf.xml</code>.  For example, to set in the environment:</p>\n<pre><code class=\"language-console\">galaxy_server% export DRMAA_LIBRARY_PATH=/galaxy/lsf/7.0/linux2.6-glibc2.3-x86_64/lib/libdrmaa.so\ngalaxy_server% export DRMAA_LIBRARY_PATH=/galaxy/sge/lib/lx24-amd64/libdrmaa.so\n</code></pre>\n<p>To set in <code>job_conf.xml</code>:</p>\n<pre><code class=\"language-xml\" id=\"sge\">&#x3C;plugins>\n    &#x3C;plugin id=\"sge\" type=\"runner\" load=\"galaxy.jobs.runners.drmaa:DRMAAJobRunner\">\n        &#x3C;param id=\"drmaa_library_path\">/galaxy/sge/lib/lx24-amd64/libdrmaa.so&#x3C;/param>\n    &#x3C;/plugin>\n&#x3C;/plugins>\n</code></pre>\n<p>The value in <code>job_conf.xml</code> will override any value set in the <code>$DRMAA_LIBRARY_PATH</code> environment variable.</p>\n<h3 id=\"parameters-and-configuration\"><a href=\"#parameters-and-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Parameters and Configuration</h3>\n<p><em>following the existing example...</em></p>\n<p>The DRMAA runner takes four optional plugin parameters in addition to <code>drmaa_library_path</code> explained above:</p>\n<pre><code class=\"language-xml\" id=\"drmaa\">&#x3C;plugins>\n    &#x3C;plugin id=\"drmaa\" type=\"runner\" load=\"galaxy.jobs.runners.drmaa:DRMAAJobRunner\">\n        &#x3C;param id=\"invalidjobexception_state\">ok&#x3C;/param>\n        &#x3C;param id=\"invalidjobexception_retries\">0&#x3C;/param>\n        &#x3C;param id=\"internalexception_state\">ok&#x3C;/param>\n        &#x3C;param id=\"internalexception_retries\">0&#x3C;/param>\n    &#x3C;/plugin>\n&#x3C;/plugins>\n</code></pre>\n<p>These parameters control the way in which a job will be considered terminal, since different DRMs behave in different ways.  For example, DRMAA specifies a \"job finished normally\" state, but not all DRMs will report this state, and instead, job completion can only determined by checking job state and encountering a drmaa <code>InvalidJobException</code> exception.  These parameters are explained below:</p>\n<table>\n  <tr>\n    <td> </td>\n    <td> </td>\n    <td> </td>\n    <td> </td>\n    <td> </td>\n    <td> <rowclass=\"th\"> <code>DRMAAJobRunner <param></code>s </td>\n  </tr>\n  <tr class=\"th\" >\n    <th> <code>id</code> </th>\n    <th> values </th>\n    <th> details </th>\n    <th> required </th>\n    <th> example </th>\n    <th> default </th>\n  </tr>\n  <tr>\n    <td> <code>invalidjobexception_state</code> </td>\n    <td> <code>ok</code> or <code>error</code> </td>\n    <td> Whether Galaxy should treat an <code>InvalidJobException</code> as a job failure </td>\n    <td> optional </td>\n    <td> <code><param id=\"invalidjobexception_state\">error</param></code> </td>\n    <td> <code>ok</code> </td>\n  </tr>\n  <tr>\n    <td> <code>invalidjobexception_retries</code> </td>\n    <td> any integer >= 0 </td>\n    <td> The number of times a job should be rechecked before <code>InvalidJobException</code> is considered terminal </td>\n    <td> optional </td>\n    <td> <code><param id=\"invalidjobexception_retries\">3</param></code> </td>\n    <td> <code>0</code> do not retry state check) </td>\n  </tr>\n  <tr>\n    <td> <code>internalexception_state</code> </td>\n    <td> <code>ok</code> or <code>error</code> </td>\n    <td> Whether Galaxy should treat an <code>InternalException</code> as a job failure </td>\n    <td> optional </td>\n    <td> <code><param id=\"internalexception_state\">error</param></code> </td>\n    <td> <code>ok</code> </td>\n  </tr>\n  <tr>\n    <td> <code>internalexception_retries</code> </td>\n    <td> any integer >= 0 </td>\n    <td> The number of times a job should be rechecked before <code>InternalException</code> is considered terminal </td>\n    <td> optional </td>\n    <td> <code><param id=\"internalexception_retries\">3</param></code> </td>\n    <td> <code>0</code> do not retry state check) </td>\n  </tr>\n</table>\n</div>\n"}},"context":{}}