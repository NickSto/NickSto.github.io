{"hash":"eaf962330836a104724e8b210d95933603316eda","data":{"article":{"id":"de3b1f70fc750dd8db8816e729a69a81","title":"","tease":"","category":null,"date":null,"days":null,"contact":"","contact_url":"","authors":"","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"redirect":"","links":[],"image":"","images":{},"external_url":"","content":"<div class=\"toc-wrapper col-md-3\">\n<ul>\n<li>\n<p><a href=\"#workshop-5-installing-your-own-galaxy\">Workshop 5: Installing Your Own Galaxy</a></p>\n<ul>\n<li><a href=\"#create-a-new-user-for-galaxy\">Create a new user for Galaxy</a></li>\n<li><a href=\"#install-mercurial\">Install Mercurial</a></li>\n<li><a href=\"#clone-the-galaxy-distribution\">Clone the Galaxy Distribution</a></li>\n<li><a href=\"#configure-galaxy\">Configure Galaxy</a></li>\n<li><a href=\"#install-postgresql\">Install PostgreSQL</a></li>\n<li><a href=\"#create-postgresql-user-and-database\">Create PostgreSQL user and database</a></li>\n<li><a href=\"#start-galaxy-for-the-first-time\">Start Galaxy for the first time</a></li>\n<li><a href=\"#install-an-init-script-to-start-galaxy-automatically\">Install an init script to start Galaxy automatically</a></li>\n<li><a href=\"#start-galaxy-from-the-init-script\">Start Galaxy from the init script</a></li>\n<li><a href=\"#install-nginx\">Install nginx</a></li>\n<li><a href=\"#configure-and-start-nginx\">Configure and start nginx</a></li>\n<li><a href=\"#configure-galaxy-for-nginx-uploaddownload\">Configure Galaxy for nginx upload/download</a></li>\n<li><a href=\"#install-proftpd\">Install ProFTPd</a></li>\n<li><a href=\"#configure-proftpd\">Configure ProFTPd</a></li>\n<li><a href=\"#configure-galaxy-to-use-sun-grid-engine\">Configure Galaxy to use Sun Grid Engine</a></li>\n<li><a href=\"#run-multiple-galaxy-processes\">Run multiple Galaxy processes</a></li>\n<li><a href=\"#configure-the-distributed-object-store\">Configure the Distributed Object Store</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"body-wrapper col-md-9\">\n<h1 id=\"workshop-5-installing-your-own-galaxy\"><a href=\"#workshop-5-installing-your-own-galaxy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Workshop 5: Installing Your Own Galaxy</h1>\n<ul>\n<li><a href=\"https://depot.galaxyproject.org/hub/attachments/documents/presentations/gcc2012/WS5/universe_wsgi.ini\" target=\"_blank\" rel=\"noopener noreferrer\">universe_wsgi.ini modified with all of the changes below</a></li>\n<li><a href=\"https://depot.galaxyproject.org/hub/attachments/documents/presentations/gcc2012/WS5_InstallingYourOwn.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">Slides</a></li>\n</ul>\n<p>Documentation for all of these features is at <a href=\"/admin/config/performance/production-server/\">Admin/Config/Performance/ProductionServer</a>.</p>\n<h2 id=\"create-a-new-user-for-galaxy\"><a href=\"#create-a-new-user-for-galaxy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create a new user for Galaxy</h2>\n<pre><code class=\"language-console\">trainingday@trainingday:~$ sudo -i\n[sudo] password for trainingday: 12345\nroot@trainingday:~# useradd -m -s /bin/bash galaxy\nroot@trainingday:~# \n</code></pre>\n<h2 id=\"install-mercurial\"><a href=\"#install-mercurial\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install Mercurial</h2>\n<pre><code class=\"language-console\">root@trainingday:~# apt-get install mercurial\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nThe following extra packages will be installed:\n  mercurial-common\nSuggested packages:\n  qct wish kdiff3 tkdiff meld xxdiff python-mysqldb python-pygments\nThe following NEW packages will be installed:\n  mercurial mercurial-common\n0 upgraded, 2 newly installed, 0 to remove and 24 not upgraded.\nNeed to get 0 B/1,982 kB of archives.\nAfter this operation, 6,691 kB of additional disk space will be used.\nDo you want to continue [Y/n]? \nSelecting previously unselected package mercurial-common.\n(Reading database ... 60146 files and directories currently installed.)\nUnpacking mercurial-common (from .../mercurial-common_2.0.2-1ubuntu1_all.deb) ...\nSelecting previously unselected package mercurial.\nUnpacking mercurial (from .../mercurial_2.0.2-1ubuntu1_i386.deb) ...\nProcessing triggers for man-db ...\nSetting up mercurial-common (2.0.2-1ubuntu1) ...\nSetting up mercurial (2.0.2-1ubuntu1) ...\n\nCreating config file /etc/mercurial/hgrc.d/hgext.rc with new version\nroot@trainingday:~# \n</code></pre>\n<h2 id=\"clone-the-galaxy-distribution\"><a href=\"#clone-the-galaxy-distribution\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Clone the Galaxy Distribution</h2>\n<pre><code class=\"language-console\">root@trainingday:~# su - galaxy\ngalaxy@trainingday:~$ hg clone https://bitbucket.org/galaxy/galaxy-dist/\ndestination directory: galaxy-dist\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes\nadded 7405 changesets with 28970 changes to 5975 files\nupdating to branch default\n3922 files updated, 0 files merged, 0 files removed, 0 files unresolved\ngalaxy@trainingday:~$ cd galaxy-dist\ngalaxy@trainingday:~/galaxy-dist$ \n</code></pre>\n<p>If you were following along in the workshop, we cloned from <code>~trainingday/galaxy-dist</code> instead of <code>https://bitbucket.org/galaxy/galaxy-dist/</code> for performance reasons.  You can change the default location that will be used for pulling updates by changing the default URL in <code>~galaxy/galaxy-dist/.hg/hgrc</code></p>\n<h2 id=\"configure-galaxy\"><a href=\"#configure-galaxy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure Galaxy</h2>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ cp universe_wsgi.ini.sample universe_wsgi.ini\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>I changed the following settings:</p>\n<ul>\n<li><code>database_connection = postgres:///galaxy?host=/var/run/postgresql</code> - Use a PostgreSQL database via a local UNIX domain socket (the socket is in /var/run/postgresql).  Details on this URL syntax are at <a href=\"/admin/config/performance/production-server/\">Admin/Config/Performance/ProductionServer</a> under the \"Switching to a database server\" section.</li>\n<li><code>database_engine_option_server_side_cursors = True</code> - Keep large SQL query results on the PostgreSQL server, rather the transferring the entire result set to the Galaxy process.</li>\n<li><code>database_engine_option_strategy = threadlocal</code> - Only use one database connection per thread.</li>\n<li><code>tool_dependency_dir = /home/galaxy/tool-deps</code> - The directory that will house tool dependencies.  <a href=\"/admin/config/tool-dependencies/\">Admin/Config/Tool Dependencies</a> explains how these dependencies can be configured.  Tools installed from the tool shed that manage their own dependencies (e.g. freebayes) will also use this directory.</li>\n<li><code>debug = False</code> - Disables debugging middleware that loads server responses in to memory (can crash the server when handling large files).</li>\n<li><code>use_interactive = False</code> - Disables live client browser debugging (insecure).</li>\n<li><code>library_import_dir = /home/galaxy/import</code> - Administrators can directly import datasets from this directory on the server to Data Libraries.  This includes an option that allows an effective \"symlink\" to the data, rather than copying it in to Galaxy's <code>file_path</code> directory.  Documented at <a href=\"/admin/data-libraries/uploading-library-files/\">Admin/DataLibraries/UploadingLibraryFiles</a>.</li>\n<li><code>user_library_import_dir = /home/galaxy/user-import</code> - Non-administrators can directly import datasets from this directory on this server to Data Libraries from which they have been given write permission.  Documented at the same link as above.</li>\n<li><code>allow_library_path_paste = True</code> - Administrators can import datasets from anywhere on the server's filesystem(s) by entering their paths in to a textarea.</li>\n<li><code>id_secret = &#x3C;random text></code> - Ensures that the encoded IDs used by Galaxy (especially session IDs) are unique.  One simple way to generate a value for this is with a shell command like <code>% date | md5sum</code></li>\n<li><code>use_remote_user</code> and <code>remote_user_maildomain</code> - I did not enable these, but this is how users can use your institution's existing authentication system to log in to Galaxy.  Documentation is specific to <a href=\"/admin/config/apache-proxy/\">Admin/Config/Apache Proxy</a> or <a href=\"/admin/config/nginx-proxy/\">Admin/Config/nginx Proxy</a>.</li>\n<li><code>admin_users = nate@example.org</code> - Make nate@example.org an administrator.  Galaxy's Admin UI is only accessible if you define administrators here!</li>\n<li><code>allow_user_impersonation = True</code> - Users configured as administrators (with <code>admin_users</code>) can \"become\" other users to view Galaxy exactly as the impersonated user does.  Useful for providing support.</li>\n<li><code>allow_user_dataset_purge = True</code> - Allow users to forcibly remove their datasets from disk (note that the data is only actually removed if all versions of a shared dataset are purged by all users who are sharing the dataset).  By default, Galaxy does not remove data, as this is done at a later time by the dataset cleanup scripts (discussed below).</li>\n<li><code>enable_quotas = True</code> - Enable Galaxy's quota system.  Quotas are configured by administrators in the Galaxy Admin UI.</li>\n<li><code>set_metadata_externally = True</code> - Galaxy must detect certain attributes about the outputs of a tool after the tool has finished running, and store these attributes as metadata.  These include things like the number of reads (for fasta/fastq), column types (for tabular data) and so forth.  This process can be very CPU intensive for large files and will lock up the Galaxy server process.  set_metadata_externally causes this step to happen in a separate process (and if the tool ran on a cluster, it happens on the cluster).</li>\n</ul>\n<h2 id=\"install-postgresql\"><a href=\"#install-postgresql\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install PostgreSQL</h2>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:~# apt-get install postgresql\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nThe following extra packages will be installed:\n  libpq5 postgresql-9.1 postgresql-client-9.1 postgresql-client-common\n  postgresql-common\nSuggested packages:\n  oidentd ident-server locales-all postgresql-doc-9.1\nThe following NEW packages will be installed:\n  libpq5 postgresql postgresql-9.1 postgresql-client-9.1\n  postgresql-client-common postgresql-common\n0 upgraded, 6 newly installed, 0 to remove and 24 not upgraded.\nNeed to get 0 B/5,487 kB of archives.\nAfter this operation, 15.5 MB of additional disk space will be used.\nDo you want to continue [Y/n]? \nPreconfiguring packages ...\nSelecting previously unselected package libpq5.\n(Reading database ... 60757 files and directories currently installed.)\nUnpacking libpq5 (from .../libpq5_9.1.4-0ubuntu12.04_i386.deb) ...\nSelecting previously unselected package postgresql-client-common.\nUnpacking postgresql-client-common (from .../postgresql-client-common_129_all.deb) ...\nSelecting previously unselected package postgresql-client-9.1.\nUnpacking postgresql-client-9.1 (from .../postgresql-client-9.1_9.1.4-0ubuntu12.04_i386.deb) ...\nSelecting previously unselected package postgresql-common.\nUnpacking postgresql-common (from .../postgresql-common_129_all.deb) ...\nAdding 'diversion of /usr/bin/pg_config to /usr/bin/pg_config.libpq-dev by postgresql-common'\nSelecting previously unselected package postgresql-9.1.\nUnpacking postgresql-9.1 (from .../postgresql-9.1_9.1.4-0ubuntu12.04_i386.deb) ...\nSelecting previously unselected package postgresql.\nUnpacking postgresql (from .../postgresql_9.1+129_all.deb) ...\nProcessing triggers for man-db ...\nProcessing triggers for ureadahead ...\nureadahead will be reprofiled on next reboot\nSetting up libpq5 (9.1.4-0ubuntu12.04) ...\nSetting up postgresql-client-common (129) ...\nSetting up postgresql-client-9.1 (9.1.4-0ubuntu12.04) ...\nupdate-alternatives: using /usr/share/postgresql/9.1/man/man1/psql.1.gz to provide /usr/share/man/man1/psql.1.gz (psql.1.gz) in auto mode.\nSetting up postgresql-common (129) ...\nAdding user postgres to group ssl-cert\nBuilding PostgreSQL dictionaries from installed myspell/hunspell packages...\n  en_us\nSetting up postgresql-9.1 (9.1.4-0ubuntu12.04) ...\nCreating new cluster (configuration: /etc/postgresql/9.1/main, data: /var/lib/postgresql/9.1/main)...\nMoving configuration file /var/lib/postgresql/9.1/main/postgresql.conf to /etc/postgresql/9.1/main...\nMoving configuration file /var/lib/postgresql/9.1/main/pg_hba.conf to /etc/postgresql/9.1/main...\nMoving configuration file /var/lib/postgresql/9.1/main/pg_ident.conf to /etc/postgresql/9.1/main...\nConfiguring postgresql.conf to use port 5432...\nupdate-alternatives: using /usr/share/postgresql/9.1/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) in auto mode.\n* Starting PostgreSQL 9.1 database server                               [ OK ] \n\nSetting up postgresql (9.1+129) ...\nProcessing triggers for libc-bin ...\nldconfig deferred processing now taking place\nroot@trainingday:~# \n</code></pre>\n<h2 id=\"create-postgresql-user-and-database\"><a href=\"#create-postgresql-user-and-database\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create PostgreSQL user and database</h2>\n<pre><code class=\"language-console\">root@trainingday:~# su - postgres\npostgres@trainingday:~$ createuser galaxy\nShall the new role be a superuser? (y/n) n\nShall the new role be allowed to create databases? (y/n) n\nShall the new role be allowed to create more new roles? (y/n) n\npostgres@trainingday:~$ createdb -O galaxy galaxy\npostgres@trainingday:~$ \n</code></pre>\n<h2 id=\"start-galaxy-for-the-first-time\"><a href=\"#start-galaxy-for-the-first-time\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Start Galaxy for the first time</h2>\n<p>This is necessary because <code>run.sh</code> contains a number of setup steps that need to happen before Galaxy starts the first time.</p>\n<pre><code class=\"language-console\">postgres@trainingday:~$ exit\nlogout\nroot@trainingday:~# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist\ngalaxy@trainingday:~/galaxy-dist$ sh run.sh --reload\n  ... a lot of output ...\nserving on http://127.0.0.1:8080\n&#x3C;sup>C&#x3C;/sup>C caught in monitor process\n\ngalaxy@trainingday:~/galaxy-dist$ \n</code></pre>\n<h2 id=\"install-an-init-script-to-start-galaxy-automatically\"><a href=\"#install-an-init-script-to-start-galaxy-automatically\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install an init script to start Galaxy automatically</h2>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:~# cd /etc/init.d\nroot@trainingday:/etc/init.d# vim galaxy\n</code></pre>\n<p>In <code>/etc/init.d/galaxy</code>, paste the following:</p>\n<pre><code class=\"language-bash\">#!/bin/bash\n\n# Author: James Casbon, 2009\n\n# Provides:             galaxy\n# Required-Start:       $network $local_fs $mysql\n# Required-Stop:\n# Default-Start:        2 3 4 5\n# Default-Stop:         0 1 6\n# Short-Description:    Galaxy\n\n. /lib/lsb/init-functions\n\nUSER=\"galaxy\"\nGROUP=\"galaxy\"\nDIR=\"/home/galaxy/galaxy-dist/\"\nPYTHON=\"/usr/bin/python\"\nOPTS=\"./scripts/paster.py serve universe_wsgi.ini\"\nLOGDIR=\"/home/galaxy/galaxy-dist/log\"\nRUNDIR=\"/var/run\"\n\ncase \"${1:-*}\" in\n  'start')\n           [ ! -d \"$LOGDIR\" ] &#x26;&#x26; (mkdir -p $LOGDIR; chown $USER:$GROUP $LOGDIR)\n           servers=`sed -n 's/^\\[server:\\(.*\\)\\]/\\1/  p' $DIR/universe_wsgi.ini | xargs echo`\n           for server in $servers; do\n               PIDFILE=\"$RUNDIR/galaxy_$server.pid\"\n               SERVER_NAME=\"--server-name=$server\"\n               LOG_FILE=\"--log-file=$LOGDIR/$server.log\"\n               log_daemon_msg \"Starting Galaxy $server\"\n               if start-stop-daemon --chuid $USER --group $GROUP --start --make-pidfile \\\n                     --pidfile $PIDFILE --background --chdir $DIR --exec $PYTHON -- $OPTS $SERVER_NAME $LOG_FILE; then\n                 log_end_msg 0\n               else\n                 log_end_msg 1\n           fi\n           done\n        ;;\n  'stop')\n           servers=`sed -n 's/^\\[server:\\(.*\\)\\]/\\1/  p' $DIR/universe_wsgi.ini | xargs echo`\n           for server in $servers; do\n               PIDFILE=\"$RUNDIR/galaxy_$server.pid\"\n               log_daemon_msg \"Stopping Galaxy $server\" \n           if start-stop-daemon --stop --pidfile $PIDFILE; then\n                 log_end_msg 0\n               else\n             log_end_msg 1\n           fi\n       done\n        ;;\n  'restart')\n           # restart commands here\n       $0 stop\n       $0 start\n               \n        ;;\n* )      # no parameter specified\n    echo \"Usage: $SELF start|stop|restart|reload|force-reload|status\"\n      exit 1\n      ;;\n\nesac\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# chmod +x galaxy\nroot@trainingday:/etc/init.d# update-rc.d galaxy defaults\n Adding system startup for /etc/init.d/galaxy ...\n   /etc/rc0.d/K20galaxy -> ../init.d/galaxy\n   /etc/rc1.d/K20galaxy -> ../init.d/galaxy\n   /etc/rc6.d/K20galaxy -> ../init.d/galaxy\n   /etc/rc2.d/S20galaxy -> ../init.d/galaxy\n   /etc/rc3.d/S20galaxy -> ../init.d/galaxy\n   /etc/rc4.d/S20galaxy -> ../init.d/galaxy\n   /etc/rc5.d/S20galaxy -> ../init.d/galaxy\nroot@trainingday:/etc/init.d# \n</code></pre>\n<h2 id=\"start-galaxy-from-the-init-script\"><a href=\"#start-galaxy-from-the-init-script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Start Galaxy from the init script</h2>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# /etc/init.d/galaxy start\n  * Starting Galaxy main                                                  [ OK ] \n\nroot@trainingday:/etc/init.d# \n</code></pre>\n<p>Galaxy can now be accessed at <a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080/</a></p>\n<h2 id=\"install-nginx\"><a href=\"#install-nginx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install nginx</h2>\n<p>Note that under Debian/Ubuntu, <code>nginx-extras</code> contains 3rd party modules, including the nginx_upload_module, which we need for the advanced nginx config.  This module may also be available in nginx packages for Fedora-based distributions, but if not, you may have to compile nginx by hand to get the upload module.</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# apt-get install nginx-extras\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nThe following extra packages will be installed:\n  liblua5.1-0 libperl5.14 nginx-common\nThe following NEW packages will be installed:\n  liblua5.1-0 libperl5.14 nginx-common nginx-extras\n0 upgraded, 4 newly installed, 0 to remove and 24 not upgraded.\nNeed to get 0 B/1,448 kB of archives.\nAfter this operation, 3,481 kB of additional disk space will be used.\nDo you want to continue [Y/n]? \nSelecting previously unselected package liblua5.1-0.\n(Reading database ... 61153 files and directories currently installed.)\nUnpacking liblua5.1-0 (from .../liblua5.1-0_5.1.4-12ubuntu1_i386.deb) ...\nSelecting previously unselected package libperl5.14.\nUnpacking libperl5.14 (from .../libperl5.14_5.14.2-6ubuntu2_i386.deb) ...\nSelecting previously unselected package nginx-common.\nUnpacking nginx-common (from .../nginx-common_1.1.19-1_all.deb) ...\nSelecting previously unselected package nginx-extras.\nUnpacking nginx-extras (from .../nginx-extras_1.1.19-1_i386.deb) ...\nProcessing triggers for ufw ...\nProcessing triggers for ureadahead ...\nProcessing triggers for man-db ...\nSetting up liblua5.1-0 (5.1.4-12ubuntu1) ...\nSetting up libperl5.14 (5.14.2-6ubuntu2) ...\nSetting up nginx-common (1.1.19-1) ...\nSetting up nginx-extras (1.1.19-1) ...\nProcessing triggers for libc-bin ...\nldconfig deferred processing now taking place\nroot@trainingday:/etc/init.d# \n</code></pre>\n<h2 id=\"configure-and-start-nginx\"><a href=\"#configure-and-start-nginx\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure and start nginx</h2>\n<p>The configuration of proxy servers is explained in the wiki at <a href=\"/admin/config/nginx-proxy/\">Admin/Config/nginx Proxy</a> and <a href=\"/admin/config/apache-proxy/\">Admin/Config/Apache Proxy</a>.</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# cd /etc/nginx/sites-available/\nroot@trainingday:/etc/nginx/sites-available# vim galaxy\n</code></pre>\n<p>In <code>/etc/nginx/sites-available/galaxy</code>, paste the following:</p>\n<pre><code class=\"language-nginx\" is=\"\"># this file is included inside http {}\n\n# gzip is enabled in nginx.conf, but these override some of the other gzip defaults\ngzip_vary on;\ngzip_comp_level 4;\ngzip_proxied any;\ngzip_types text/plain text/css application/x-javascript text/xml application/xml text/javascript application/json;\ngzip_buffers 16 8k;\n\n# define the proxied application\nupstream galaxy_app {\n    server localhost:8080;\n    server localhost:8081;\n}\n\n# http server directives\nserver {\n\n    # maximum file upload size\n    client_max_body_size 10G;\n\n    # pass most requests to the proxied Galaxy application\n    location / {\n        proxy_pass      http://galaxy_app;\n        proxy_set_header    X-Forwarded-Host $host;\n        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n    # directly handle file downloads in nginx\n    location /_x_accel_redirect/ {\n        internal;\n        alias /;\n    }\n\n    # directly handle file uploads in nginx\n    location /_upload {\n        upload_store /home/galaxy/nginx_upload_store;\n        upload_pass_form_field \"\";\n        upload_set_form_field \"__${upload_field_name}__is_composite\" \"true\";\n        upload_set_form_field \"__${upload_field_name}__keys\" \"name path\";\n        upload_set_form_field \"${upload_field_name}_name\" \"$upload_file_name\";\n        upload_set_form_field \"${upload_field_name}_path\" \"$upload_tmp_path\";\n        upload_pass_args on;\n        upload_pass /_upload_done;\n    }\n    location /_upload_done {\n        set $dst /tool_runner/index;\n        if ($args ~ nginx_redir=([^&#x26;]+)) {\n            set $dst $1;\n        }\n        rewrite \"\" $dst;\n    }\n\n    # directly serve static content in nginx\n    location /static {\n        alias /home/galaxy/galaxy-dist/static;\n        expires 24h;\n    }\n    location /static/style {\n        alias /home/galaxy/galaxy-dist/static/june_2007_style/blue;\n        expires 24h;\n    }\n    location /static/scripts {\n        alias /home/galaxy/galaxy-dist/static/scripts/packed;\n        expires 24h;\n    }\n    location /favicon.ico {\n        alias /home/galaxy/galaxy-dist/static/favicon.ico;\n        expires 24h;\n    }\n    location /robots.txt {\n        alias /home/galaxy/galaxy-dist/static/robots.txt;\n        expires 24h;\n    }\n}\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\" class=\"./sites-enabled/\">root@trainingday:/etc/nginx/sites-available# cd ../sites-enabled/\nroot@trainingday:/etc/nginx/sites-enabled# rm default \nroot@trainingday:/etc/nginx/sites-enabled# ln -s /etc/nginx/sites-available/galaxy \nroot@trainingday:/etc/nginx/sites-enabled# cd ..\nroot@trainingday:/etc/nginx# vim nginx.conf\n</code></pre>\n<p>In <code>/etc/nginx/nginx.conf</code>, change the first line:</p>\n<pre><code class=\"language-nginx\">user www-data;\n</code></pre>\n<p>To:</p>\n<pre><code class=\"language-nginx\">user galaxy;\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/nginx# /etc/init.d/nginx start\nStarting nginx: nginx.\nroot@trainingday:/etc/nginx# \n</code></pre>\n<p>Galaxy can now be accessed at <a href=\"http://localhost/\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost/</a></p>\n<h2 id=\"configure-galaxy-for-nginx-uploaddownload\"><a href=\"#configure-galaxy-for-nginx-uploaddownload\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure Galaxy for nginx upload/download</h2>\n<pre><code class=\"language-console\">root@trainingday:/etc/nginx# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist/\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>In <code>universe_wsgi.ini</code>, set the following:</p>\n<ul>\n<li><code>nginx_x_accel_redirect_base = /_x_accel_redirect</code> - This is the internal URL used by nginx to serve files for download.  It must match the location set in the nginx config above.</li>\n<li><code>nginx_upload_store = /home/galaxy/nginx_upload_store</code> - This is the directory that files uploaded to the nginx_upload_module will be saved to.  It must match the path set in the nginx config above.</li>\n<li><code>nginx_upload_path = /_upload</code> - This is the internal URL used by nginx to redirect the client once the upload is complete.  It must match the location set in the nginx config above.</li>\n</ul>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:/etc/nginx# /etc/init.d/galaxy restart\n* Stopping Galaxy main                                                  [ OK ] \n* Starting Galaxy main                                                  [ OK ] \n\nroot@trainingday:/etc/nginx# \n</code></pre>\n<h2 id=\"install-proftpd\"><a href=\"#install-proftpd\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install ProFTPd</h2>\n<pre><code class=\"language-console\">root@trainingday:/etc/nginx# apt-get install proftpd proftpd-mod-pgsql\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nNote, selecting 'proftpd-basic' instead of 'proftpd'\nThe following extra packages will be installed:\n  libcap2\nSuggested packages:\n  proftpd-doc proftpd-mod-mysql proftpd-mod-ldap proftpd-mod-odbc\n  proftpd-mod-sqlite openbsd-inetd inet-superserver\nThe following NEW packages will be installed:\n  libcap2 proftpd-basic proftpd-mod-pgsql\n0 upgraded, 3 newly installed, 0 to remove and 24 not upgraded.\nNeed to get 0 B/2,146 kB of archives.\nAfter this operation, 4,688 kB of additional disk space will be used.\nDo you want to continue [Y/n]? \nPreconfiguring packages ...\nSelecting previously unselected package libcap2.\n(Reading database ... 61206 files and directories currently installed.)\nUnpacking libcap2 (from .../libcap2_1%3a2.22-1ubuntu3_i386.deb) ...\nSelecting previously unselected package proftpd-basic.\nUnpacking proftpd-basic (from .../proftpd-basic_1.3.4a-1_i386.deb) ...\nSelecting previously unselected package proftpd-mod-pgsql.\nUnpacking proftpd-mod-pgsql (from .../proftpd-mod-pgsql_1.3.4a-1_i386.deb) ...\nProcessing triggers for ureadahead ...\nProcessing triggers for man-db ...\nSetting up libcap2 (1:2.22-1ubuntu3) ...\nSetting up proftpd-basic (1.3.4a-1) ...\nWarning: The home dir /var/run/proftpd you specified can't be accessed: No such file or directory\nAdding system user `proftpd' (UID 109) ...\nAdding new user `proftpd' (UID 109) with group `nogroup' ...\nNot creating home directory `/var/run/proftpd'.\nAdding system user `ftp' (UID 110) ...\nAdding new user `ftp' (UID 110) with group `nogroup' ...\nCreating home directory `/srv/ftp' ...\n`/usr/share/proftpd/templates/welcome.msg' -> `/srv/ftp/welcome.msg.proftpd-new'\n* Starting ftp server proftpd                                                  trainingday proftpd[7609]: mod_tls/2.4.3: compiled using OpenSSL version 'OpenSSL 1.0.0e 6 Sep 2011' headers, but linked to OpenSSL version 'OpenSSL 1.0.1 14 Mar 2012' library\n\ntrainingday proftpd[7609]: mod_sftp/0.9.8: compiled using OpenSSL version 'OpenSSL 1.0.0e 6 Sep 2011' headers, but linked to OpenSSL version 'OpenSSL 1.0.1 14 Mar 2012' library\ntrainingday proftpd[7609]: mod_tls_memcache/0.1: notice: unable to register 'memcache' SSL session cache: Memcache support not enabled\n                                                                         [ OK ]\nSetting up proftpd-mod-pgsql (1.3.4a-1) ...\nProcessing triggers for libc-bin ...\nldconfig deferred processing now taking place\nroot@trainingday:/etc/nginx# \n</code></pre>\n<p>When prompted by <code>debconf</code> with the following question, select <code>standalone</code>:</p>\n<pre><code> ┌─────────────────────────┤ ProFTPD configuration ├─────────────────────────┐  \n │ ProFTPD can be run either as a service from inetd, or as a standalone     │  \n │ server. Each choice has its own benefits. With only a few FTP             │  \n │ connections per day, it is probably better to run ProFTPD from inetd in   │  \n │ order to save resources.                                                  │  \n │                                                                           │  \n │ On the other hand, with higher traffic, ProFTPD should run as a           │  \n │ standalone server to avoid spawning a new process for each incoming       │  \n │ connection.                                                               │  \n │                                                                           │  \n │ Run proftpd:                                                              │  \n │                                                                           │  \n │                                from inetd                                 │  \n │                                standalone                                 │  \n │                                                                           │  \n │                                                                           │  \n │                                  &#x3C;Ok>                                     │  \n │                                                                           │  \n └───────────────────────────────────────────────────────────────────────────┘  \n                                                                                \n</code></pre>\n<h2 id=\"configure-proftpd\"><a href=\"#configure-proftpd\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure ProFTPd</h2>\n<p>The configuration of ProFTPd is explained in the wiki at [Admin/Config/Upload via FTP](/src/admin/config/Upload via FTP/index.md).</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/nginx# cd /etc/proftpd/\nroot@trainingday:/etc/proftpd# vim modules.conf \n</code></pre>\n<p>In <code>/etc/proftpd/modules.conf</code>, uncomment the following 3 directives:</p>\n<pre><code class=\"language-apache\">LoadModule mod_sql.c\nLoadModule mod_sql_postgres.c\nLoadModule mod_sql_passwd.c\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/proftpd# vim proftpd.conf \n</code></pre>\n<p>In <code>/etc/proftpd/proftpd.conf</code>, change:</p>\n<pre><code class=\"language-apache\">User                            proftpd\nGroup                           nogroup\n</code></pre>\n<p>To:</p>\n<pre><code class=\"language-apache\">User                            galaxy\nGroup                           galaxy\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/proftpd# cd conf.d\nroot@trainingday:/etc/proftpd/conf.d# vim galaxy.conf\n</code></pre>\n<p>In <code>/etc/proftpd/conf.d/galaxy.conf</code>, paste the following:</p>\n<pre><code class=\"language-apache\"># Cause every FTP user to be \"jailed\" (chrooted) into their home directory\nDefaultRoot                     ~\n\n# Automatically create home directory if it doesn't exist\nCreateHome                      on dirmode 700\n\n# Allow users to overwrite their files\nAllowOverwrite                  on\n\n# Allow users to resume interrupted uploads\nAllowStoreRestart               on\n\n# Bar use of SITE CHMOD\n&#x3C;Limit SITE_CHMOD>\n  DenyAll\n&#x3C;/Limit>\n\n# Bar use of RETR (download) since this is not a public file drop\n&#x3C;Limit RETR>\n  DenyAll\n&#x3C;/Limit>\n\n# Do not authenticate against real (system) users\nAuthPAM                         off\n\n# Set up mod_sql_password - Galaxy passwords are stored as hex-encoded SHA1\nSQLPasswordEngine               on\nSQLPasswordEncoding             hex\n\n# Set up mod_sql to authenticate against the Galaxy database\nSQLEngine                       on\nSQLBackend                      postgres\nSQLConnectInfo                  galaxy@/var/run/postgresql galaxy\nSQLAuthTypes                    SHA1\nSQLAuthenticate                 users\n\n# An empty directory in case chroot fails\nSQLDefaultHomedir               /var/lib/proftpd/empty\n\n# Define a custom query for lookup that returns a passwd-like entry.  UID and GID should match your Galaxy user.\nSQLUserInfo                     custom:/LookupGalaxyUser\nSQLNamedQuery                   LookupGalaxyUser SELECT \"email,password,'1001','1001','/home/galaxy/ftp/%U','/bin/bash' FROM galaxy_user WHERE email='%U'\"\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/proftpd/conf.d# mkdir -p /var/lib/proftpd/empty\nroot@trainingday:/etc/proftpd/conf.d# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist/\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>In <code>universe_wsgi.ini</code>, set the following:</p>\n<ul>\n<li><code>ftp_upload_dir = /home/galaxy/ftp</code> - The directory where files uploaded via FTP will be placed.</li>\n<li><code>ftp_upload_site = localhost</code> - The FTP site hostname displayed on the upload form.</li>\n</ul>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:/etc/proftpd/conf.d# /etc/init.d/proftpd restart\n* Stopping ftp server proftpd                                           [ OK ] \n* Starting ftp server proftpd                                                  trainingday proftpd[7908]: mod_tls/2.4.3: compiled using OpenSSL version 'OpenSSL 1.0.0e 6 Sep 2011' headers, but linked to OpenSSL version 'OpenSSL 1.0.1 14 Mar 2012' library\n\ntrainingday proftpd[7908]: mod_sftp/0.9.8: compiled using OpenSSL version 'OpenSSL 1.0.0e 6 Sep 2011' headers, but linked to OpenSSL version 'OpenSSL 1.0.1 14 Mar 2012' library\ntrainingday proftpd[7908]: mod_tls_memcache/0.1: notice: unable to register 'memcache' SSL session cache: Memcache support not enabled\n                                                                         [ OK ]\nroot@trainingday:/etc/proftpd/conf.d# /etc/init.d/galaxy restart\n* Stopping Galaxy main                                                  [ OK ] \n* Starting Galaxy main                                                  [ OK ] \n\nroot@trainingday:/etc/proftpd/conf.d# \n</code></pre>\n<p>The warnings can safely be ignored.</p>\n<h2 id=\"configure-galaxy-to-use-sun-grid-engine\"><a href=\"#configure-galaxy-to-use-sun-grid-engine\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure Galaxy to use Sun Grid Engine</h2>\n<p>The configuration of Galaxy's cluster interface is explained in the wiki at <a href=\"/admin/config/performance/cluster/\">Admin/Config/Performance/Cluster</a>.</p>\n<p>A bit of work occurred behind the scenes for this step.  I preinstalled and preconfigured SGE in the VM, since setting up your DRM is outside of the scope of Galaxy configuration.</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/proftpd/conf.d# cd /etc/init.d\nroot@trainingday:/etc/init.d# vim galaxy\n</code></pre>\n<p>In <code>/etc/init.d/galaxy</code>, add the following to the section at the top where other environment variables are set:</p>\n<pre><code class=\"language-bash\">DRMAA_LIBRARY_PATH=\"/usr/lib/libdrmaa.so.1.0\"\nSGE_ROOT=\"/var/lib/gridengine\"\nexport DRMAA_LIBRARY_PATH SGE_ROOT\n</code></pre>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>In <code>universe_wsgi.ini</code>, set the following:</p>\n<ul>\n<li><code>start_job_runners = drmaa</code> - Start the <a href=\"http://www.drmaa.org\" target=\"_blank\" rel=\"noopener noreferrer\">DRMAA</a> job runner.</li>\n<li><code>default_cluster_job_runner = drmaa:///</code> - By default, run jobs on the cluster.</li>\n<li>Comment out the <code>local:///</code> tool overrides in the <code>[galaxy:tool_runners]</code> section.</li>\n</ul>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:/etc/init.d# /etc/init.d/galaxy restart\n* Stopping Galaxy main                                                  [ OK ] \n* Starting Galaxy main                                                  [ OK ] \n\nroot@trainingday:/etc/init.d# \n</code></pre>\n<h2 id=\"run-multiple-galaxy-processes\"><a href=\"#run-multiple-galaxy-processes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Run multiple Galaxy processes</h2>\n<p>The configuration of scaling with multiple processes is explained in the wiki at <a href=\"/admin/config/performance/scaling/\">Admin/Config/Performance/Scaling</a>.</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# /etc/init.d/galaxy stop\n* Stopping Galaxy main                                                  [ OK ] \n\nroot@trainingday:/etc/init.d# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist/\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>In <code>universe_wsgi.ini</code>, comment out <code>[server:main]</code> and all of that section's contents.  Then add the following sections to the top of the file:</p>\n<pre><code class=\"language-ini\">[server:web0]\nuse = egg:Paste#http\nport = 8080\nuse_threadpool = True\n\n[server:web1]\nuse = egg:Paste#http\nport = 8081\nuse_threadpool = True\n\n[server:manager]\nuse = egg:Paste#http\nport = 8085\nuse_threadpool = True\n\n[server:handler0]\nuse = egg:Paste#http\nport = 8090\nuse_threadpool = True\n\n[server:handler1]\nuse = egg:Paste#http\nport = 8091\nuse_threadpool = True\n</code></pre>\n<p>Further down in the file, set the following:</p>\n<ul>\n<li><code>job_manager = manager</code> - Specifies that the server named 'manager' defined above should have the role of assigning jobs to handlers.</li>\n<li><code>job_handlers = handler0,handler1</code> - Specifies that the servers named 'handler0' and 'handler1' should have the role of running, tracking, and finishing jobs.</li>\n</ul>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:/etc/init.d# /etc/init.d/galaxy start\n* Starting Galaxy web0                                                  [ OK ] \n* Starting Galaxy web1                                                  [ OK ] \n* Starting Galaxy manager                                               [ OK ] \n* Starting Galaxy handler0                                              [ OK ] \n* Starting Galaxy handler1                                              [ OK ] \n\nroot@trainingday:/etc/init.d# \n</code></pre>\n<h2 id=\"configure-the-distributed-object-store\"><a href=\"#configure-the-distributed-object-store\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure the Distributed Object Store</h2>\n<p>The distributed object store allows you to balance datasets across multiple filesystems and multiple file servers.</p>\n<pre><code class=\"language-console\">root@trainingday:/etc/init.d# su - galaxy\ngalaxy@trainingday:~$ cd galaxy-dist/\ngalaxy@trainingday:~/galaxy-dist$ cp distributed_object_store_conf.xml.sample distributed_object_store_conf.xml\ngalaxy@trainingday:~/galaxy-dist$ vim universe_wsgi.ini\n</code></pre>\n<p>In <code>universe_wsgi.ini</code>, set the following:</p>\n<ul>\n<li><code>object_store = distributed</code></li>\n<li><code>distributed_object_store_config_file = distributed_object_store_conf.xml</code></li>\n</ul>\n<p>Once saved, continue with:</p>\n<pre><code class=\"language-console\">galaxy@trainingday:~/galaxy-dist$ exit\nlogout\nroot@trainingday:/etc/init.d# /etc/init.d/galaxy restart\n* Stopping Galaxy web0                                                  [ OK ] \n* Stopping Galaxy web1                                                  [ OK ] \n* Stopping Galaxy manager                                               [ OK ] \n* Stopping Galaxy handler0                                              [ OK ] \n* Stopping Galaxy handler1                                              [ OK ] \n* Starting Galaxy web0                                                  [ OK ] \n* Starting Galaxy web1                                                  [ OK ] \n* Starting Galaxy manager                                               [ OK ] \n* Starting Galaxy handler0                                              [ OK ] \n* Starting Galaxy handler1                                              [ OK ] \n\nroot@trainingday:/etc/init.d# \n</code></pre>\n</div>\n"}},"context":{}}