{"hash":"14e186fd360947c1255e65c919a062692f477385","data":{"article":{"id":"93bd5815b0d3aacc438dbc1e9ac37c9a","title":"GMOD Summer School 2014 - Installing Galaxy","tease":"","image":"","images":{},"category":"events","contact":"","date":null,"content":"<p>This page was created in May, 2014 for the 'Installing Galaxy' workshop, part of the\n<a href=\"http://gmod.org/wiki/GMOD_Online_Training_2014\" target=\"_blank\" rel=\"noopener noreferrer\">GMOD Summer School Program for 2014</a> and in cooperation with\n<a href=\"http://gmod.org\" target=\"_blank\" rel=\"noopener noreferrer\">The Generic Model Organism Database project</a>.</p>\n<p>The version of Galaxy used was\n<a href=\"https://bitbucket.org/galaxy/galaxy-dist/commits/3534f67acd2a4f84899335326ac2cc8bcf05201d\" target=\"_blank\" rel=\"noopener noreferrer\">13083:3534f67acd2a of the galaxy-dist repository</a>.\nIf you're using a newer version of Galaxy, procedures and images used for the tutorial may have changed. See the current\npages for the features mentioned for updated information.</p>\n<p>The class was taught using an AMI instance from\n<a href=\"https://console.aws.amazon.com/ec2/v2/home?region=us-east-1\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon's EC2 web service (U.S. East)</a>\nand the AMI instance id is: <code>ami-907e97f8</code> (which is an Ubuntu AMI with only data installed for this tutorial).</p>\n<p>Familiarity with Galaxy is helpful but not necessary. If you'd want to explore how to use Galaxy from a user's\nperspective, you may want to view <a href=\"https://usegalaxy.org/u/aun1/p/galaxy101\" target=\"_blank\" rel=\"noopener noreferrer\">The Galaxy 101 Tutorial</a>.</p>\n<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h2>\n<p>There are two sections to this workshop page:</p>\n<ol>\n<li><a href=\"/events/gmod-summer-school2014/#command-line-set-up-and-operation\">command-line installation and configuration</a>: primarily geared to users who\nwant a basic installation of Galaxy with an eye towards setting things up flexibly should they decide to scale up at a\nlater date.</li>\n<li><a href=\"/events/gmod-summer-school2014/#the-admin-web-interface\">administration from the web</a>: introduces new admin users to the management of some of\nGalaxy's most useful features including tool installation, library management, and workflow creation.</li>\n</ol>\n<p>Advanced installation will be covered lightly but will provide good resources for those that already know they need a\nlarge scale server installation.</p>\n<p>Galaxy requires a Unix-like OS to run: Linux, Debian, Redhat, and (for the most part) Mac OSX. Galaxy servers cannot run\non Windows OS.</p>\n<p>This series of instructions assumes you are (relatively) familiar with using a terminal and some experience with using\na text editor in the terminal (nano, vi/vim, emacs, etc).</p>\n<h2 id=\"br-\"><a href=\"#br-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h2 id=\"command-line-set-up-and-operation\"><a href=\"#command-line-set-up-and-operation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Command-line Set Up and Operation</h2>\n<p>Galaxy can interface with many complex and powerful computing resources such as compute clusters, dynamic resource\nmanagers (DRMs), and virtual cloud servers. It's also designed to allow thousands of users to work simultaneously on\nmany analyses at once.</p>\n<p>It can also be very useful on a much smaller scale: a single lab or even a single user. To begin here, we'll start with:</p>\n<ul>\n<li>some of the basic set up,</li>\n<li>how to avoid some future problems if you decide to scale up,</li>\n<li>and how to do basic administrative tasks that will allow your users (or just you) to do analysis with Galaxy</li>\n</ul>\n<h3 id=\"a-galaxy-user\"><a href=\"#a-galaxy-user\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>A 'galaxy' user</h3>\n<p>In many cases if you are building a Galaxy installation for that will serve many users, process many jobs at once,\nor think that you may at some later date, it is a good idea to perform the following installation using a non-sudo\nuser specifically for Galaxy (i.e the 'galaxy' user).</p>\n<p>Create a galaxy <em>NON-ROOT</em> user named 'galaxy' and switch to that user:</p>\n<pre><code class=\"language-bash\">$ sudo useradd -m -s /bin/bash galaxy\n$ sudo -iu galaxy\n</code></pre>\n<p>By switching to the galaxy user and doing the next steps, you're ensuring that the process that runs galaxy is not\ndependent on a normal user account and that the process will have permissions and access to all the files it needs.</p>\n<h3 id=\"downloading-and-installing-galaxy\"><a href=\"#downloading-and-installing-galaxy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Downloading and Installing Galaxy</h3>\n<p>You'll need python 2.6 or higher.</p>\n<pre><code class=\"language-bash\">$ python --version\nPython 2.7.6\n</code></pre>\n<p>Galaxy is best downloaded using the Mercurial distibuted source management system:</p>\n<ul>\n<li><a href=\"http://mercurial.selenic.com/\" target=\"_blank\" rel=\"noopener noreferrer\">http://mercurial.selenic.com/</a></li>\n<li><a href=\"http://mercurial.selenic.com/guide\" target=\"_blank\" rel=\"noopener noreferrer\">http://mercurial.selenic.com/guide</a></li>\n</ul>\n<pre><code class=\"language-bash\">$ hg --version\nMercurial Distributed SCM (version 2.8.2)\n(see http://mercurial.selenic.com for more information)\n\nCopyright (C) 2005-2013 Matt Mackall and others\nThis is free software; see the source for copying conditions. There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\n</code></pre>\n<p>See also <a href=\"/events/bio-it-world2014/w14/#clone_28download29_galaxy\">Using APT to get Mercurial</a> for an example of\ninstalling mercurial via APT (a unix package manager).</p>\n<ol>\n<li><strong>As the galaxy user</strong>, create the directory where you'd want to install Galaxy on your server (in this example, a\nfolder named <code>ourgalaxy</code> directly below galaxy's 'home' directory):</li>\n</ol>\n<pre><code class=\"language-bash\">$ mkdir ourgalaxy\n$ cd ourgalaxy\n$ pwd\n/home/galaxy/ourgalaxy\n</code></pre>\n<ol start=\"3\">\n<li>To download Galaxy (from the terminal/command line):</li>\n</ol>\n<pre><code class=\"language-bash\">$ hg clone https://bitbucket.org/galaxy/galaxy-dist\n# Mercurial will download the galaxy-dist repository to /ourgalaxy/galaxy-dist ...\ndestination directory: galaxy-dist\nrequesting all changes\nadding changesets\nadding manifests\nadding file changes # ...\n</code></pre>\n<p>When the prompt in your terminal returns, the download has finished:</p>\n<pre><code class=\"language-bash\" class=\"..\"># ... the numbers here may be different\nadded 13084 changesets with 44579 changes to 8097 files (+1 heads)\nupdating to branch default\n3504 files updated, 0 files merged, 0 files removed, 0 files unresolved\n$\n</code></pre>\n<p>NOTE: cloning the full Galaxy code repository can take some time. Please, jump to <a href=\"#more-resources\">More Resources</a> while we wait for\nit to install.</p>\n<ol start=\"4\">\n<li>When the download is complete, update Galaxy to the most stable version/branch:</li>\n</ol>\n<pre><code class=\"language-bash\">$ cd galaxy-dist\n$ hg update stable\n  # Mercurial will let you know which files were updated ...\n</code></pre>\n<p>The Galaxy development team endeavors to quickly fix bugs and improve Galaxy all the time. By downloading with\nMercurial, we can easily 'pull' changes, fixes, and updates from <code>bitbucket.org</code> to our server when they're available.</p>\n<p>More advanced users may also consider installing Galaxy in a virtual environment with <code>virtualenv</code>. This will create a\nclean slate for your python dependencies and paths (including <code>$PYTHONPATH</code>). For more information see:\n<a href=\"https://docs.galaxyproject.org/en/latest/admin/production.html#use-a-clean-environment\" target=\"_blank\" rel=\"noopener noreferrer\">Use a clean environment</a>\nand:\n<a href=\"/events/bio-it-world2014/w14/#create-a-python-virtual-environment\">Create a Python virtual environment</a></p>\n<h3 id=\"the-universe_wsgiini-configuration-file\"><a href=\"#the-universe_wsgiini-configuration-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The universe_wsgi.ini Configuration File</h3>\n<p>Galaxy is highly configurable and much of that configuration is controlled with the file <code>universe_wsgi.ini</code>. When you\nfirst download Galaxy it will include a 'template' of the <code>universe_wsgi.ini</code> file named <code>universe_wsgi.ini.sample</code>\n(you'll see this <code>sample</code> template pattern for many of Galaxy's config files). The <code>sample</code> file contains all the\noriginal/default settings availble for configuration. Don't alter the <code>sample</code> file directly - instead, copy it to\n<code>universe_wsgi.ini</code> and change settings there:</p>\n<pre><code class=\"language-bash\">$ cp universe_wsgi.ini.sample universe_wsgi.ini\n</code></pre>\n<p>Next, let's add ourselves (NOTE: not the galaxy user) as administrator to what will be our Galaxy server:</p>\n<ol>\n<li>Open the <code>universe_wsgi.ini</code> file in a text editor.</li>\n<li>Find the line: <code>#admin_users = None</code>.</li>\n<li>Read the comments before that line. Most settings in <code>universe_wsgi.ini</code> are documented with comments before\nthe setting and can be turned off (and set to a default) by adding the <code>#</code> to the start. There are currently no admin\nusers.</li>\n<li>Uncomment that line by removing the <code>#</code> from the beginning</li>\n<li>Add the email you intend to use for your administrator account: <code>admin_users = &#x3C;your-email></code></li>\n<li>Save and close the file.</li>\n</ol>\n<p>Most of the changes to <code>universe_wsgi.ini</code> can be done using the above steps: search for a line, change or un/comment\nit out, and save (optionally restarting the server afterwards - shown later).</p>\n<p>(for more information and another example see: <a href=\"/admin/\">Admin/Interface</a>)</p>\n<h2 id=\"br--1\"><a href=\"#br--1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"installing-postgresql\"><a href=\"#installing-postgresql\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing PostgreSQL</h3>\n<p>Although Galaxy can be run imediately with the included SQLite database ('batteries included'), one of the best ways to\nprevent later problems with your installation is to <em>begin</em> by using a full database such as PostgreSQL:\n<a href=\"http://www.postgresql.org/\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.postgresql.org/</a></p>\n<pre><code class=\"language-bash\">$ psql --version\npsql (PostgreSQL) 9.1.12\ncontains support for command-line editing\n</code></pre>\n<p>Even if you're the sole user, you may find that you want to scale up at a later date (more users, compute cluster, etc.)\nand a fully functional database server like PostgreSQL is an important part of that process. It can be difficult to\nmove any existing information from a SQLite database to Postgres (or MySQL) so, by doing this now, future-you may be\nquite thankful. More importantly SQLite does not support concurrency - which roughly means that queries may fail if more\nthan one user is using the database at the same time.</p>\n<p>PostgreSQL can be installed with a package manager. Installing, starting, and configuring PostgreSQL is beyond the scope\nof this tutorial but more information can be found at:\n<a href=\"http://www.postgresql.org/docs/9.3/static/admin.html\" target=\"_blank\" rel=\"noopener noreferrer\">their admin documentation page</a>\nand a quick command line example here:\n<a href=\"/events/bio-it-world2014/w14/#install-and-configure-postgresql\">Install and configure PostgreSQL</a></p>\n<p>Let's create a postgres user named galaxy for our system galaxy user:</p>\n<ol>\n<li>Log out of the galaxy user and back into your sudo/admin user role by pressing <code>Ctrl-d</code>.</li>\n<li>Use the postgres user to create a postgres galaxy user:</li>\n</ol>\n<pre><code class=\"language-bash\">sudo -u postgres createuser galaxy\nShall the new role be a superuser? (y/n) n\nShall the new role be allowed to create databases? (y/n) n\nShall the new role be allowed to create more new roles? (y/n) n\n</code></pre>\n<p>(Don't give any of the permissions prompted for.)</p>\n<ol start=\"3\">\n<li>Then, create a databse for our installation with the galaxy user as its owner:</li>\n</ol>\n<pre><code class=\"language-bash\">$ sudo -u postgres createdb -O galaxy galaxydb\n</code></pre>\n<ol start=\"4\">\n<li>Log back in as the galaxy user for the rest of this part of the tutorial:</li>\n</ol>\n<pre><code class=\"language-bash\">$ sudo -iu galaxy\n$ cd ourgalaxy/galaxy-dist\n</code></pre>\n<ol start=\"5\">\n<li>Change <code>database_connection</code> in <code>universe_wsgi.ini</code> to have galaxy use postgres as the database:</li>\n</ol>\n<pre><code class=\"language-ini\">database_connection = postgresql:///galaxydb?host=/var/run/postgresql\n</code></pre>\n<p>Some important points and suggestions for setting up a Galaxy server with a full database can be found here:\n<a href=\"https://docs.galaxyproject.org/en/latest/admin/production.html#use-a-clean-environment\" target=\"_blank\" rel=\"noopener noreferrer\">Use a clean environment</a></p>\n<h2 id=\"br--2\"><a href=\"#br--2\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"more-configuration\"><a href=\"#more-configuration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>More Configuration</h3>\n<h4 id=\"debugging\"><a href=\"#debugging\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Debugging</h4>\n<p>Disable the debugging and development settings:</p>\n<ol>\n<li><code>debug</code> - comment it out</li>\n</ol>\n<pre><code class=\"language-ini\"># Debug enables access to various config options useful for development and\n# debugging:                                  ... Debug mode is disabled if\n# commented, but is uncommented by default in the sample config.\n#debug = True\n</code></pre>\n<ol start=\"2\">\n<li><code>use_interactive</code> - comment it out</li>\n</ol>\n<pre><code class=\"language-ini\"># Enable live debugging in your browser.  This should NEVER be enabled on a\n# public site.  Enabled in the sample config for development.\n#use_interactive = True\n</code></pre>\n<p>See the <a href=\"https://docs.galaxyproject.org/en/latest/admin/production.html#disable-the-developer-settings\" target=\"_blank\" rel=\"noopener noreferrer\">Production Server Help</a>\nfor why you'd want to change these.</p>\n<p>If you run into problems, you can turn any of these back on and they will provide more information and may help with the\ndebugging process.</p>\n<h4 id=\"security\"><a href=\"#security\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Security</h4>\n<p>Set the <code>id_secret</code> to make Galaxy's ids (encoded versions of database ids for your resources such as session ids,\ndataset ids, etc.) unique to your server:</p>\n<ol>\n<li>Generate a random piece of text. This will be combined in Galaxy with the database ids to encode them:</li>\n</ol>\n<pre><code class=\"language-bash\">$ date | md5sum\n# NOTE: you're result will be different here\nb9bf59c1cf5e910ef87b1494ac032e25  -\n</code></pre>\n<p>(We're using only the first part of the output - don't copy the space and hyphen at the end)</p>\n<ol start=\"2\">\n<li>Set <code>id_secret</code> to that text:</li>\n</ol>\n<pre><code class=\"language-ini\"># Galaxy encodes various internal values when these values will be output in\n# some format (for example, in a URL or cookie).  You should set a key to be\n# used by the algorithm that encodes and decodes these values.  It can be any\n# string.  If left unchanged, anyone could construct a cookie that would grant\n# them access to others' sessions.\nid_secret = b9bf59c1cf5e910ef87b1494ac032e25\n</code></pre>\n<h4 id=\"port-number-and-customization\"><a href=\"#port-number-and-customization\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Port Number and customization</h4>\n<p>You can (uncomment and) change the port number Galaxy serves from to 8081:</p>\n<pre><code class=\"language-ini\"># The port on which to listen.\nport = 8081\n</code></pre>\n<p>NOTE: for our example we'll keep the port number at 8081. To provide a clean url without a port number, the best option\nis probably to start using a proxy server:\n<a href=\"https://docs.galaxyproject.org/en/latest/admin/production.html#using-a-proxy-server\" target=\"_blank\" rel=\"noopener noreferrer\">Using a proxy server</a></p>\n<p>Change the listening address to <code>0.0.0.0</code> and uncomment:</p>\n<pre><code class=\"language-ini\"># The address on which to listen.  By default, only listen to localhost (Galaxy\n# will not be accessible over the network).  Use '0.0.0.0' to listen on all\n# available network interfaces.\nhost = 0.0.0.0\n</code></pre>\n<p>Without this change, Galaxy by default only serves to 127.0.0.1 and its web pages would only be available on the\nmachine serving them at: <code>localhost:8081</code>. By making this change, we're allowing anyone who knows our URL/IP to connect.</p>\n<p>And change the 'brand' or name of our Galaxy server here:</p>\n<pre><code class=\"language-ini\"># Append \"/{brand}\" to the \"Galaxy\" text in the masthead.\nbrand = GMOD\n</code></pre>\n<p>Of course, you can change this later to suit your lab or your needs.</p>\n<h4 id=\"the-tool_dependency_dir\"><a href=\"#the-tool_dependency_dir\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The tool_dependency_dir</h4>\n<p>The final change we'll make before we log in is to uncomment and add a tool dependency directory in the\n<code>universe_wsgi.ini</code> file. This is a directory that will store the programs that Galaxy tools rely on to function as\nwe'll see later in <a href=\"/tools/\">Tools</a>:</p>\n<pre><code class=\"language-ini\">tool_dependency_dir = ../tool_dependencies\n</code></pre>\n<p>It can often be useful to place this directory outside the Galaxy installation folder to make updating Galaxy or sharing\nits tools easier. In our case tool dependencies will be at <code>/home/galaxy/ourgalaxy/tool_dependencies</code>. The directory\nwill be automatically created - you don't need to do that.</p>\n<h2 id=\"br--3\"><a href=\"#br--3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"runsh-start-up-stopping-re-starting-and-log-files\"><a href=\"#runsh-start-up-stopping-re-starting-and-log-files\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>run.sh: Start Up, Stopping, Re-starting and Log Files</h3>\n<p>In the 'Galaxy base directory' (<code>/home/ourgalaxy/galaxy-dist</code>), is a script named <code>run.sh</code>. This script allows us to\nstart and stop our Galaxy server. There are many scripts for administrative tasks in the base directory, <code>scripts</code>\ndirectory, and <code>cron</code> directory and they're worth exploring in a text editor.</p>\n<h4 id=\"in-the-foreground\"><a href=\"#in-the-foreground\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>In the foreground</h4>\n<p>Galaxy can be easily started as a foreground process in a terminal window with the run.sh script in the Galaxy base\ndirectory:</p>\n<pre><code class=\"language-bash\">$ cd ourgalaxy/galaxy-dist\n$ sh run.sh --reload\n# ... Log file outputs to screen showing db migrations/upgrades, tools loading, etc.```\n\nIn this case, the log file outputs quite a bit of information to show you what is loading as Galaxy starts up. This\nis also a great place to check for errors (not only on startup but as users use your server).\n\nNote also the `--reload` switch. This serves two functions:\n1. It will cause the server to automatically restart if there are any changes to the core python code (useful when\n  debugging code). You'll see a line labeled 'restarting' just after you make the change.\n2. On many terminals it helps to allow stopping the server just by pressing `Ctrl+c`. Without the `--reload` flag,\n  `Ctrl+c` can behave erratically on some systems.\n\nGo ahead and stop the server with `Ctrl+c` and we'll restart it in the background using the `--daemon` switch.\n\n\n#### In the background with a daemon\n\n```bash\n$ sh run.sh --daemon\nEntering daemon mode\n# (No log file this time)```\n\n\nThis switch starts Galaxy in a background process allowing you to continue to use that terminal window for other things\nor close it altogether. This also implies some other things:\n1. Galaxy (or more accurately, Paster: the server technology currently behind Galaxy) will write log messages (by\n  default) to a file in the base Galaxy directory named 'paster.log'.\n2. Galaxy will write the process id (pid) of the background process used to 'paster.pid'. This will allow you to look\n  up process information with the unix command `ps`, etc.\n3. `Ctrl+c` will no longer stop the server.\n\nIn order to stop the server in this mode, the easiest way is:\n```bash\n$ sh run.sh --stop-daemon\n</code></pre>\n<p>But you can also kill the process with the id mentioned in 'paster.pid'.</p>\n<p>The <code>--reload</code> and <code>--daemon</code> switches can't be used together.</p>\n<p>Galaxy can also be started as a service. <code>init</code> script examples are included in the <code>contrib</code> directory of the Galaxy\nbase directory.</p>\n<h4 id=\"restarting-the-server\"><a href=\"#restarting-the-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Restarting the server</h4>\n<p>In order to restart the server, simply shut it down and bring it back up (which can be accomplished with a single\ncommand):</p>\n<pre><code class=\"language-bash\">$ sh run.sh --stop-daemon; sh run.sh --daemon\n</code></pre>\n<p>NOTE: you'll see many sections here and elsewhere in the wiki ask you to <em>restart the server</em>: i.e. to stop the paster\n(web) server and restart it in order to re-load any changes in the configuration you may have made. Using the above\ncommand will do this in daemon mode; when using <code>--reload</code> the server will do this automatically.</p>\n<h4 id=\"the-log-file\"><a href=\"#the-log-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The log file</h4>\n<p>The log file is not only a searchable record of activity on the server but also provides information on errors. It's\noften a good place to look when the UI is reporting an error or when something isn't behaving correctly.</p>\n<p>Galaxy does not delete or clear the log file between starts and stops and it appends the most recent log messages to the\nend of the file. That means that you're able to scan it for past information as well.</p>\n<p>This also means that the file can grow quickly. To 'rotate' your log files, see:\n<a href=\"https://docs.galaxyproject.org/en/latest/admin/production.html#rotate-log-files\" target=\"_blank\" rel=\"noopener noreferrer\">Rotating log files</a>.</p>\n<p>It can be useful (for this tutorial or anytime you're configuring your server) when running in daemon mode to open a new\nterminal window or tab and 'follow the tail' of your log file:</p>\n<pre><code class=\"language-bash\">$ tail -f paster.log\n</code></pre>\n<p>In this way you get the benefit of seeing the most recent messages and can still use Galaxy as a daemon.</p>\n<p>Go ahead and start up the server so we can log in:</p>\n<pre><code class=\"language-bash\">$ sh run.sh --daemon\n</code></pre>\n<p>When the server has successfully restarted and is ready you'll see:</p>\n<pre><code class=\"language-bash\">serving on 0.0.0.0:8081\n</code></pre>\n<p>at the end of the log output.</p>\n<h2 id=\"br--4\"><a href=\"#br--4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h2 id=\"the-admin-web-interface\"><a href=\"#the-admin-web-interface\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The Admin Web Interface</h2>\n<p>Your Galaxy server should now be running, so let's log in to our admin account with a browser:</p>\n<ol>\n<li>Open your preferred browser (Chrome, Firefox are recommended but Galaxy works also with IE+10) in the virtual\nmachine.</li>\n<li>Using the address bar, go to <code>localhost:8081</code> - you should see the Galaxy 'Analyze Data' home page.</li>\n<li>From the top menus, click: <code>User</code>-><code>Register</code> (<code>Register</code> is a link in a sub-menu of <code>User</code>).</li>\n<li>Register your account using the same email you set <code>admin_users</code> to in <code>universe_wsgi.ini</code>.</li>\n<li>Reload the page or click <code>Analyze Data</code> to get back to the home page now as a logged in user.</li>\n</ol>\n<p>Later, if serving your lab computer or from behind a proxy, Galaxy can be accessed from other computers at:\n<code>&#x3C;your IP or server URL>:8081</code>.</p>\n<p>Once your Galaxy server is running, many of its functions can be controled over the web through the administration\npage. Click <code>Admin</code> from the top menu.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 640 200' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-60f2a62f2453ca8466beddc643c07933'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-60f2a62f2453ca8466beddc643c07933)' width='640' height='200' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAIAAACyFKxoAAAACXBIWXMAAAsSAAALEgHS3X78AAAI%2b0lEQVRIx8VW%2bW9U1xWev6CV8lNbRUlJ27SJQgCzB4MhhkLSUJJAk/aHSGmrRi0NpSVqLKjUplJIQigEsDGGUIFpALVKim0MGPAyHuNlZt7%2b5u3LrG/Gs7%2bZ8YIX7H5vBkpIrIo2kXrn%2bPrec89779xzvu/c69r47EvPPveTH2x59bXtda/8dOcrr/5m68uvPb/t5zXrt2158We/%2bFXdb9/40%2b/r3v7l67u3v7575eoty1Y9t7x6830KjKvXvlBTu62mdisGa9dvW73uRegxXfP01tqNL0Ozonpz9TosbcXS2vU/ggaWK1b/cFXN83gQyooxZFXNC/MXrqlaXL185boFC1c8saB6Te021%2bNP1lQte2xN7eY36vbW7dm7680/79z11s7f/bF244/x6h273npz99t1e97ZvuMPv96x5%2bHvrPjGN5c8%2bMgy9PcjX3uo6tEn1ixd%2bcySFZvmL3p64dINi5Zu%2bPrDS%2bZX1WKwZOUmyEPfWv7tx6oXL/8%2bVhcs2bD0qWeerKp9cN7SeY%2buhE1V%2bZHFyzdCYPaVBx5ZsOip1Ws3fe%2b7C776wLzHF9a69h9sqj965HB90%2bH6vx6q//Bww8lD9ScPHfnwSMPJ/QeO/eWDpnffb3hvf8PBQ8f3H2g88EETBgcONh1taj524owjxx1pPN4McQZNzU0n/laZYgw5eux0Q%2bOphmOnnEFZoKxo6hsdcWyaTtc3wsyxrHeWTh%2b9%2b%2bDtp6CH8kj9iX37Dr637%2bC%2b9w8drj8BvWtkpBDgOVmWFFnQNNXQFUWWRkqF2dlbMzPTs7OQW3fGtyrTqcmJmZmZWUcLzf%2b5uQwzrupRWY2gD4gmLxh8QFe1iBlKGMH450U3I8lkkiCIve%2b823S86dzZs82nTp850/z382c/One%2b%2bcxHDY1NZ5qbz587PzY%2bjn1OTU1PT9%2baLjdniPGUo5ua/h8bHq5IpbkG/fo/23qvdhHoGXFYDRaVYEEy8qKWm0N0W1QsXddGR0fj8Xgmk7XtfC6Xz6TTqWQyn8/HYlY6hV86k8nA%2b1t32ozTZiuaLzkDjGBd66bc/YHuPo4VE4qZF5S0bOTUoD2HhIqKnggGTfhH00w4FGJZOpGwjGBYEgKGrumqAhRKksTxvCTjJ/J8QJJkivCzNIVFkqQoihaFQN628fkKFL/QBkQt2%2bNhWy/daL862HLR3eNhWtrcXtLQQkVJz8lG/h4xC7IWNwx9YmIil88XC4VsNjs%2bPlYslYrFIjJQhKpQyGWxmMcAs1JxxLbtXC5rlzU5jLLO3%2bjY2OTk5MRNvGlybGzs5rjTMHH%2b3bw5OTFxvxuAl3TAovgYeggnDSMP6OfwvrwBSbPCiHwo7Pf7GZr2%2bYnJiUldN0RJ5hiaoaj%2bG/00TXt9Po7jvN4hWZTcbg9NU0NDXlSLoYE%2b75BvyOtXZEVRVVEUNCOI/FAUIYhi0DQ4lkWONFW5z9y4BDXT2UO1tPe1Xelvbfdcd1OXrnkxpYW4injPlQFACOEMhkJgMzKQz9sYgBWIH8bDw8PgQ7E0ksk6sUaw06lUsVAEYdJlbkBdKBbRl0olrFdUGBRsp%2bUdTjl/I6iPxUI2l0Xe7EIhnUnjEzCz83YmnUGGs9kMLF3gKyPEfXSI5KIkF2GEBMFGeCmJDEh6Hqv3yJ0MRKPRXk8ffj6fT5KU/v5%2beAn/AgEhwHE8y1pWQpQkBBW5MjQtEokEAgEQgGUYWRZjcYtlmXjcEmVFlhXd0JFMSYS5JPB8KByGEgFSFIllOU1VYYB84qPo8YDf51NVVZJEMxhy8Uq60023XOpvvdzf0u7pHRAvXfX6mLAeGUW8UZFkw753A04GgHJ4hmAnEO9UCjGMRmNTkw6akQQoEVTA2y7YCCT4mioHvhxiG4HEgyAI8pZJpyoxxv5R1rJlbiC0FQplM9ki6FUqpZzKliyNjMAGZEM%2bkdlMNoP3gMQ5EMBLhSgwgYux4jDJxxhheMCnElyM5GIBJS3qudti2KLqZCAYDHZ2dbt7etzuHoC7r6/f3dOrKmgqEkCQFM2wCBvNcIKAKCs0ywR4HkxgOU6SZRj4vF6WYfnyFGTgGMYHUjGMM5VlmOEVDOxZTggIHB9QNXU4mUQGwD9FRgKQGCUQ4F3wrxtV6PKNj1t7Pm7p6nRTn7T2dLqZji7/tR7qwkUPtiGb9r83IKkWqOaU/EgkYcUACcuyDN00TYP0%2b1AorXjcDIYjkWg0ElE1DW4YJnJmJIcTHMcAZthYJBozNCUWi2mKEgmHTTOIAwRbhaUkSvCuXI11vMXQDcRF05TRsfG5SUywVlcv5yVDsom6aUNko1AZiFrewY%2bOQ%2b2O6AVJdSCUzWQQNiAbOQWOYrHo2Ng4sp8EEiycZamRUimZTNl2AVmOx2LAlcNdTBMJ6AGCRGIYqyBw2mGkHbNioL7DeUfhsL1YRk88kcAL8SCAiqilUkmQPm7FMQDSrFjM5aPD//jk%2bpVOUg%2bPaqEReK8GS/AePQTT8hl8dwM4iW9DqLPr%2brWrnl4PYODxeMAwXdNIkqYIgqbIUND0er08SC2IKK9AkQMNSSII0ufzg8denx9nnFN5GdbrJ0RZoikKtRVIQyHwDg2C0HiCpIEj0jBMYAnnIzBDMczQ4JCfIPBqjmVA4kyPh2u7MnDh0g0cZx2dBIppdx/fenmgvWOwuy8gaLm7Ur5KwLnkcNLU9XKVoFFtVMOAh0KAB1hwzKHgCOWSgsKi6hoQq%2bs68iYIApzCIklQhmHAt1DQMI2gKMu4i%2bgaEKcRfpImadkhBvCFswXMoYHSSCiMsz8YDImSouPbhslQNAaugJolmOggYQ6SwQG/7mciIDRwj36QNEneQjY%2bswEkADXH7ydIgrSs%2bGz5SvAZaFbuPPd/U7htWb4z/Vf3JRcrpXCTu9B%2b42LHUNvlgeu9zJUusr1j6GLHQGcvg9qKVPBKVlBzZbElJW4aBq4PACUwipvl5x39T37PVJycuznL91p9%2bm2ftru7AThH8nEvHRkkkAHTz8a8dNjPRL1UmMCYCvvoSEDN3RFbkK1IJGwaeltbG46CL%2bVC9kXavwDvzkCgZi04kgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"640\" data-srcset=\"/assets/static/admin.a0d7643.0e5d505f95762afeea52cb3af2086beb.png 640w\" data-sizes=\"(max-width: 640px) 100vw, 640px\" data-src=\"/assets/static/admin.a0d7643.0e5d505f95762afeea52cb3af2086beb.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/admin.a0d7643.0e5d505f95762afeea52cb3af2086beb.png\" width=\"640\"></noscript></p>\n<p>Here you'll see a page where you can:</p>\n<ul>\n<li>Install, manage, and search for tools: bioinformatic programs/applications for user analysis</li>\n<li>Manage data libraries: commonly used datasets that can be copied quickly by users</li>\n<li>Create, delete, and manage users as well as: separate them into groups, give them roles, and set data limit quotas</li>\n</ul>\n<p>(for more information on other admin options, see: <a href=\"/admin/\">Admin/Interface</a>)</p>\n<h2 id=\"br--5\"><a href=\"#br--5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"libraries\"><a href=\"#libraries\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Libraries</h3>\n<p>Although it's easy enough for users to upload the data they need, Galaxy also provides a way for them to access\n<strong>centralized data stores</strong> called 'libraries'. These data can be accessed and copied (more quickly than upload) to\nusers' histories where they can be used as input or reference data when running tools.</p>\n<p>Very often, Galaxy is not the only bioinformatics platform using data on a cluster or even single machine.\nChado, Tripal, and GBrowse may need access to the same data as Galaxy. Bioinformticists and others comfortable\nwith command-line analysis will need to run tools directly on those data. This implies that we might want to build a\nlibrary from a central or existing location on the file system.</p>\n<p>Also, if these data are very large, it's preferrable to not use the normal route of moving data files into Galaxy:\nuploading. Uploading will make a copy of that data and isn't a very efficient use of space.</p>\n<p>Libraries have the option to move files into Galaxy using a symlink. This allows a central location to be used (and\nstill accessible to other platforms and users) and prevents duplicating the data.</p>\n<p>We'll create a library for raw reads that all investigators might need access to. We'll symlink it into Galaxy so\nthat we can save some space and use a central location on the filesystem.</p>\n<h4 id=\"example-data\"><a href=\"#example-data\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example data</h4>\n<p>Let's drop back to the terminal quickly to see the data we'll use for the rest of this tutorial:</p>\n<pre><code class=\"language-bash\">$ ls -l /data/galaxy\ntotal 4\ndrwxr-xr-x 2 ubuntu ubuntu 4096 May 16 17:29 isolates-raw\n\n$ ls -l /data/galaxy/isolates-raw\ntotal 43904\n-rw-r--r-- 1 ubuntu ubuntu 22476934 May 16 16:49 SRR1182403_1.fastq\n-rw-r--r-- 1 ubuntu ubuntu 22476934 May 16 16:49 SRR1182403_2.fastq\n</code></pre>\n<p>Of course, in a production environment you'd use a group for access to these files and make the galaxy user a member\nof that group especially if it's clinical or sensitive data.</p>\n<p>SRR1182403 is paired-end short read data in the fastq format. The organism is <em>Saccharomyces cerevisiae</em>. It was\ndownloaded from the Short Read Archive of NCBI here:\n<a href=\"http://www.ncbi.nlm.nih.gov/sra/SRX477904\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.ncbi.nlm.nih.gov/sra/SRX477904</a></p>\n<p>Only 1,000,000 reads from the original files are used in order to make analysis quicker for this tutorial. The shortened\nfiles can be downloaded here:\n<a href=\"https://usegalaxy.org/u/carleberhard/h/saccer-srr1182403\" target=\"_blank\" rel=\"noopener noreferrer\">https://usegalaxy.org/u/carleberhard/h/saccer-srr1182403</a></p>\n<h4 id=\"library_import_dir\"><a href=\"#library_import_dir\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>library_import_dir</h4>\n<p>To import this directory directly, Galaxy needs to know where to look. To do that, we:</p>\n<ol>\n<li>Open <code>universe_wsgi.ini</code> in an editor.</li>\n<li>Search for, uncomment, and change <code>#library_import_dir = None</code> to <code>library_import_dir = /data/galaxy</code></li>\n<li><a href=\"/events/gmod-summer-school2014/#restarting-the-server\">Restart the server</a></li>\n</ol>\n<p>Now Galaxy can import whole subdirectories of <code>/data</code> and their files easily.</p>\n<h4 id=\"a-data-library-for-raw-isolate-reads\"><a href=\"#a-data-library-for-raw-isolate-reads\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>A data library for raw isolate reads</h4>\n<p>Back in the browser, go to the admin page and on the left click: 'Manage data libraries':</p>\n<ol>\n<li>A page title 'Data Libraries' will appear in the main panel. Click the 'Create new data library' at the top right.</li>\n<li>A form will appear to allow naming and description of the library. For this example, only change the name to\n'isolates-raw'</li>\n<li>Click the 'Create' button. An empty library list will load titled 'Data Library \"isolates-raw\"'.</li>\n<li>Click 'Add datasets' at the top right. A form named 'Upload files to a data library' will load.</li>\n<li>Change 'Upload option' to 'Upload a directory of files' using the drop down menu.</li>\n<li>Change 'File Format' to <code>fastqsanger</code>. You can do this by clicking the drop down, typing <code>fastqsanger</code> to search\nfor it or scrolling to it with your keys, and clicking that option. This is Galaxy's preferred flavor of fastq.</li>\n<li>Change 'Server Directory' to our directory</li>\n<li>Change 'Copy data into Galaxy?' to <code>link to files without copying into Galaxy</code> - this allows us to not duplicate\nlarge data files.</li>\n<li>Leave the remaining options at their defaults</li>\n<li>Click 'Upload to library'. A new page will load displaying the status of the upload which should complete quickly.\nBoth 'SRR1182403' fastq files should be listed.</li>\n</ol>\n<p>The two files are symlinked into Galaxy without duplication and are now available for use by all users. The\n<code>data/isolates-raw</code> could potentially have hundreds of files in it and the above import would still apply and import all\nthe files in that directory.</p>\n<h2 id=\"br--6\"><a href=\"#br--6\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"tools\"><a href=\"#tools\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tools</h3>\n<p>One important thing that only administrators can (and should!) do is install the tools necessary for their users to\nperform analyses.</p>\n<p>Installation of bioinformatics tools can be a complex and frustrating experience involving building programs from source\ncode (compiling) and hunting down and compiling any code the original code depends on ('dependencies'). The Galaxy Tool\nShed system greatly simplifies this process - allowing admin to install mappers, assemblers, etc. using only the\nadmin page.</p>\n<p>Galaxy tools are not (generally) bioinformatics programs themselves but XML files that 'wrap' an existing,\ncommand-line-only program. Among other things, the tool wrapper file defines a form interface for the tools possible\nparameters with help and explanation.</p>\n<p>See also: <a href=\"/admin/tools/add-tool-from-toolshed-tutorial/\">Adding Tools from a Tool Shed</a></p>\n<p>Programs and their dependencies will be installed to the directory setting <code>tool_dependency_dir</code> in your\n<code>universe_wsgi.ini</code> file (which we set <a href=\"/events/gmod-summer-school2014/#the-tool_dependency_dir\">here</a>). They can also be invoked on the command line\nfrom there (or added to your PATH). For example, if we have installed bwa, we could use that Galaxy tool installation\nfrom the command-line to index a yeast fasta:</p>\n<pre><code class=\"language-hightlight\">~/tool_deps/bwa/0.5.9/devteam/package_bwa_0_5_9/ec2595e4d313/bin/bwa index -a bwtsw sacCer2.fa\n</code></pre>\n<h4 id=\"tool-sheds\"><a href=\"#tool-sheds\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tool Sheds</h4>\n<p>Tool sheds are another type of Galaxy server that allow collections of tools. The Galaxy team provides access to two of\ntheir Tool shed servers 'out of the box' to every Galaxy installation: The Main Galaxy Tool Shed and the Test Galaxy\nTool Shed. Other public servers may run their own tool sheds and serve domain specific tools and wrappers they've\ncreated from there.</p>\n<p><a href=\"http://toolshed.g2.bx.psu.edu/\" target=\"_blank\" rel=\"noopener noreferrer\">Galaxy main tool shed</a>\n<a href=\"http://testtoolshed.g2.bx.psu.edu/\" target=\"_blank\" rel=\"noopener noreferrer\">Galaxy test tool shed</a>\n<a href=\"/toolshed/public-toolsheds/\">Public tool sheds</a>\nSee also the comprehensive documentation on Tool Sheds here: <a href=\"/toolshed/\">ToolShed</a>;</p>\n<h4 id=\"installing-a-tool-from-a-tool-shed\"><a href=\"#installing-a-tool-from-a-tool-shed\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Installing a tool from a Tool Shed</h4>\n<p>Let's look for and install some tools from the Main Galaxy Tool Shed. There are two ways to find tools you're looking\nfor: A.) browse all the available tools and B.) search for specific tools. Let's browse first:</p>\n<ol>\n<li>Go to the admin page if you're not already there.</li>\n<li>On the left hand menu of links, click <code>search and browse tool sheds</code></li>\n<li>In the center panel, you'll see two drop-down buttons: <code>Galaxy main tool shed</code> and <code>Galaxy test tool shed</code></li>\n<li>Click the arrow on the right of the <code>Galaxy main tool shed</code> button and you should see a menu appear.</li>\n<li>Click <code>Browse valid repositories</code></li>\n</ol>\n<p>This displays all available tool categories and the number of tools in each one. This is a good high level overview\nfor when you may not know specifically what you need.</p>\n<p>Now let's go back and look for something specific: tools for fastq manipulation and quality control. We'll start with\nFastQC, a program that produces an HTML file with graphs detailing the quality of your fastq reads:</p>\n<ol>\n<li>Again, on the left hand menu of links, click <code>search and browse tool sheds</code></li>\n<li>Click the arrow on the right of the <code>Galaxy main tool shed</code> button to make the menu appear again.</li>\n<li>This time, click <code>Search for valid tools</code>. A search form will appear.</li>\n<li>Enter <code>fastqc</code> in the <code>Tool Name</code> field and press <code>Search</code> (searches are case-insensititve)</li>\n</ol>\n<p>You should now see a list of tools with 'FastQC' in the tool's synopsis\n5. Click the checkbox next to the row whose owner (the last column) is 'devteam'\n6. Click <code>Install to Galaxy</code> at the bottom of the list (note: by selecting more than one tool from a search, you can\ninstall multiple tools at once)\n7. A page will appear detailing how to install the tool and where in the tool menu to make it available\n8. Most of the settings here can be left as is (the defaults) - but are worth reading their help text for later,\nmore advanced options\n9. Under the section labelled 'Choose the tool panel section to contain the installed tools (optional)' and\nthe prompt 'Select existing tool panel section', click the name 'NGS: QC and manipulation'. You should see the\nradiobutton (the circle to the name's left) become 'checked'.\n10. Click 'Install'.</p>\n<p>Step 9 above will make the FastQC tool available to users in the tool panel in the section titled 'NGS: QC and\nmanipulation'.</p>\n<p>A new page will appear that lists the tools to be installed and the progress of their installation ('New', 'Installed',\netc.). Wait for the progress to change to a green box labelled: 'Installed'.</p>\n<p>NOTE: if you see a red error message saying: 'Repository installation is not possible due to an invalid Galaxy URL:\nNone. You may need to enable third-party cookies in your browser.', you'll need to do just that (at least for the\nduration of this workshop).</p>\n<p>To enable 3rd-party cookies in Firefox or Chrome, see:\n<a href=\"/events/bio-it-world2014/w14/#install-a-tool-from-the-tool-shed\">enabling 3rd-party cookies</a></p>\n<p>Let's check that it was installed and is now available:</p>\n<ol>\n<li>Click 'Analyze Data' to get back to the main/home page</li>\n<li>In the left hand tool menu, click 'NGS: QC and manipulation</li>\n<li>You should see a link with the text: 'FastQC:Read QC reports using FastQC' - that indicates the tools is installed\nand ready to try.</li>\n</ol>\n<p>Again, see also: <a href=\"/admin/tools/add-tool-from-toolshed-tutorial/\">Adding Tools from a Tool Shed</a></p>\n<h2 id=\"br--7\"><a href=\"#br--7\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h4 id=\"exercise-building-a-qc-pipeline\"><a href=\"#exercise-building-a-qc-pipeline\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Exercise: building a QC pipeline</h4>\n<p>Often it falls to a site administrator to do the initial, basic QC for new data. We'll now install some more tools to\ndo that and try them out on some isolate data from a library. Also, it's best to automate this process as\nmuch as possible so we'll convert this trial run (if it worked) into a workflow (AKA pipeline) that will reduce this\nprocess to a two click operation.</p>\n<p>Using the procedure in <a href=\"/events/gmod-summer-school2014/#installing-a-tool-from-a-toolshed\">Installing a tool from a Tool Shed</a>, search for and install the following tools:</p>\n<ol>\n<li><code>fastq_paired_end_joiner</code>:</li>\n</ol>\n<ul>\n<li>search with the tool name 'fastq joiner'</li>\n<li>The owner is 'devteam' and</li>\n<li>the description is: 'FASTQ joiner on paired end reads'</li>\n</ul>\n<ol start=\"2\">\n<li><code>fastq_filter</code>:</li>\n</ol>\n<ul>\n<li>search with the tool name 'filter fastq'</li>\n<li>The owner is 'devteam' and</li>\n<li>the description is: 'Filter FASTQ reads by quality score and length'</li>\n</ul>\n<ol start=\"3\">\n<li><code>fastq_paired_end_splitter</code>:</li>\n</ol>\n<ul>\n<li>search with the tool name 'fastq splitter'</li>\n<li>The owner is 'devteam' and</li>\n<li>the description is: 'FASTQ splitter on paired end reads'</li>\n</ul>\n<p>Using the tools above, we'll:</p>\n<ul>\n<li>copy some raw, paired-end isolate reads into a history</li>\n<li>join them into one file using the joiner - if we don't join them, the pairs will be mismatched after we filter</li>\n<li>filter them by quality using the filter tool</li>\n<li>re-split them into two files</li>\n<li>run fastqc on each of those files</li>\n</ul>\n<h5 id=\"1-copy-isolate-data\"><a href=\"#1-copy-isolate-data\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Copy isolate data</h5>\n<p>When the tools are installed, in the top menu, click: 'Shared Data', then 'Data Libraries (Beta)'. This is the new\nuser interface for libraries and allows users to quickly import data from libraries into their histories.</p>\n<ol>\n<li>Click 'isolates-raw'</li>\n<li>Click both 'SRR1182403_1.fastq' and 'SRR1182403_2.fastq' to select them</li>\n<li>In the library menu above, click 'to history'</li>\n<li>Leave the selection at 'Unnamed history' (this is your current, empty history)</li>\n<li>Click 'Import'</li>\n<li>You'll see the progress of the import and should see a message that they've been successfully imported.</li>\n<li>Click 'Analyze Data' to get back to the main page.</li>\n<li>You should see both of the files you imported in the current history panel on the right hand side of the screen\nand both should be green.</li>\n</ol>\n<h5 id=\"aside-histories\"><a href=\"#aside-histories\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>(Aside: Histories)</h5>\n<p>Histories can be thought of as workspaces, workbenches, or current directories. They will contain all the output files\nfrom a user's tool analysis. A user can have multiple histories but only one will be their current history. When tools\nare executed on some input data (like our read datasets we imported), they create jobs. The status of a job (queued,\nrunning, finished, errored) is shown as the 'state' of a dataset in the current history and a color is given to each:</p>\n<ul>\n<li>queued: grey</li>\n<li>running: yellow</li>\n<li>finished/ok: green</li>\n<li>error: red</li>\n</ul>\n<p>For more information on histories see:\n<a href=\"/learn/managing-datasets/\">Managing Datasets</a>\nand:\n<a href=\"http://vimeo.com/76020876\" target=\"_blank\" rel=\"noopener noreferrer\">Managing Histories Screencast Video</a></p>\n<p>Many history options are available from the history options menu which can be opened by clicking the gear icon at the\ntop right of the history panel.</p>\n<h5 id=\"2-join-the-paired-end-read-files\"><a href=\"#2-join-the-paired-end-read-files\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Join the paired-end read files</h5>\n<p>Now, we'll run the paired end joiner tool on the two read files we imported:</p>\n<ol>\n<li>In the left hand tool menu, click 'NGS: QC and manipulation'</li>\n<li>Scroll down to 'FASTQ joiner on paired end reads' and click that link.</li>\n<li>The center panel will open with a form that controls the parameters the tools will use. The joiner is relatively\nsimple but some tools can have complex parameters. There will always be help at the bottom of a tool form to explain\nparameter settings.</li>\n<li>Click the select dropdown under 'Left-hand reads' and then choose 'SRR1182403_1.fastq'</li>\n<li>Click the select dropdown under 'Right-hand reads' and then choose 'SRR1182403_2.fastq'</li>\n<li>Click the 'Execute' button</li>\n<li>A new, yellow (or grey) dataset will appear in the current history panel 'FastQ joiner on data 1 and data 2'. This\nindicates the tool is running. If we wait it will eventually (and hopefully) turn green to indicate that it's done.</li>\n</ol>\n<h5 id=\"3-filter-the-joined-reads\"><a href=\"#3-filter-the-joined-reads\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Filter the joined reads</h5>\n<p>Next, we'll filter that joined dataset by quality. This time, we'll search for the 'Filter fastq' tool using the tool\nmenu's search bar:</p>\n<ol>\n<li>In the tool menu, click the search bar that currently says: 'search tools' enter <code>filter fastq</code>. Note how the\ncontents of the menu are filtered and change with every letter entered. Using the search, users can quickly narrow\ntheir hunt for an appropriate tool by name or description.</li>\n</ol>\n<p>Notes on tool searching:</p>\n<ul>\n<li>Searches can be cleared by deleting the text or pressing the circular close button on the right of the search bar.</li>\n<li>Both the name and description are searchable.</li>\n<li>Workflows are currently not searchable and the 'all workflows' link is always included in results</li>\n</ul>\n<ol start=\"2\">\n<li>When you've entered the text fully, there should be only one tool shown: 'Filter FASTQ'. Click that tool.</li>\n<li>In the tool form, select your dataset '3: FastQ joiner on data 1 and data 2' under 'FASTQ File' and enter</li>\n<li>0 in the 'Minimum Quality' field. This is the minimum phred score a read base must have in order to be included in\nthe output dataset.</li>\n<li>Click 'Execute' and wait for the job to finish and the dataset's color to turn green.</li>\n</ol>\n<h5 id=\"4-re-split-the-joined-filtered-file\"><a href=\"#4-re-split-the-joined-filtered-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Re-split the joined, filtered file</h5>\n<ol>\n<li>Using the tool menu, find 'fastq splitter', choose '4: Filter FASTQ on data 3' for 'FASTQ reads', execute, and\nwait for the job and (two output) datasets to finish.</li>\n</ol>\n<h5 id=\"5-re-split-the-joined-filtered-file\"><a href=\"#5-re-split-the-joined-filtered-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Re-split the joined, filtered file</h5>\n<p>Next, use FastQC to get quality reports on each of the split, filtered files:</p>\n<ol>\n<li>Search for 'FastQC' in the tool panel, and execute using '5: FASTQ splitter on data 4' for 'Short read data from\nyour current history'</li>\n<li><em>This time</em>, instead of waiting for that job to finish, click 'FastQC' in the tool panel now, choose\n'6. FASTQ splitter on <strong>data 5</strong>' and execute</li>\n</ol>\n<p>Galaxy allows users to run (or at least queue) jobs without waiting for others to finish. As long as a tool/job has\naccess to an input dataset, you can queue a new tool/job using it as input. <em>Even if the job that produces the input\ndataset is still queued or running</em> you can run a tool and start a job with it. Galaxy is smart enough to wait until\nthe job creating the input dataset is finished to begin the next.\n3. Wait for both FastQC jobs to finish.</p>\n<h2 id=\"br--8\"><a href=\"#br--8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h3 id=\"workflows\"><a href=\"#workflows\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Workflows</h3>\n<p>When a series of tools and the parameters used to run them have been found to successfully answer a question for one\nsubject (or do other housekeeping like the QC we just performed), they can be saved to workflows (roughly AKA pipelines)\nand then run by other users with other input files. This can standardize analysis and make tedious procedures easier to\nrepeat over many subjects.</p>\n<h4 id=\"manually-creating-and-editing-workflows\"><a href=\"#manually-creating-and-editing-workflows\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Manually creating and editing workflows</h4>\n<p>One way to create a workflow manually using the Workflow editor. See the following wiki pages for more information on\nthat:</p>\n<ul>\n<li><a href=\"/learn/advanced-workflow/\">Creating Workflows and Advanced Workflow Options</a></li>\n<li><a href=\"http://screencast.g2.bx.psu.edu/flash/WorkflowFromScratch.html\" target=\"_blank\" rel=\"noopener noreferrer\">Create a Workflow from Scratch Screencast</a></li>\n</ul>\n<h4 id=\"extracting-a-workflow-from-a-history\"><a href=\"#extracting-a-workflow-from-a-history\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Extracting a workflow from a history</h4>\n<p>Another way is to export it from a history containing a successful analysis that you'd want to repeat\nwith other input files (i.e. a prototype) like the QC we just did. Let's export our history into a workflow others can\nuse on different isolates:</p>\n<ol>\n<li>Click the gear shaped icon at the top right of the history panel. The history options menu should open.</li>\n<li>Click 'Extract Workflow' from that menu. The center panel should open to page that allows you to set many options\nfor the new, extracted workflow including:</li>\n</ol>\n<ul>\n<li>A workflow name</li>\n<li>Your input datasets - these will be marked as the workflow entry point because of the checked checkboxes\n'Treat as input dataset'</li>\n<li>Your join, filter, and split jobs</li>\n<li>The two FastQC jobs</li>\n</ul>\n<ol start=\"3\">\n<li>In that panel, change the name to 'Basic fastq QC'</li>\n<li>Click the 'Create Workflow' button. An info box should appear saying \"Workflow 'Basic fastq QC' created from current\nhistory\".</li>\n</ol>\n<p>(See also:\n<a href=\"http://screencast.g2.bx.psu.edu/flash/WorkflowFromHistory.html\" target=\"_blank\" rel=\"noopener noreferrer\">Creating a Workflow from a History Screencast</a>)</p>\n<p>If you'd like to view the workflow in Galaxy's workflow editor:</p>\n<ol>\n<li>Click 'Workflow' in the top menu.</li>\n<li>Click the arrow on the right of the 'Basic fastq QC' workflow in the list. A menu should appear.</li>\n<li>Click 'Edit' in that menu.</li>\n<li>You can examine the workflow, change parameters, edit, have the workflow rename the outputs, and more from the\neditor. Don't forget to save the final result using the gear icon at the top right of the center panel.</li>\n</ol>\n<p>If you'd like to have the workflow directly available to users in the tool menu:</p>\n<ol>\n<li>Click 'Workflow' in the top menu.</li>\n<li>Click 'Configure your workflow menu' at the bottom of the page. A new list should appear.</li>\n<li>Click the 'Show in menu' checkbox in the 'Basic fastq QC' row.</li>\n<li>Click 'Save' at the bottom of the page.</li>\n</ol>\n<h4 id=\"publishing-a-workflow\"><a href=\"#publishing-a-workflow\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Publishing a workflow</h4>\n<p>Workflows created by users (including admin users) are by default not available to other users. They must be published\nfirst. Let's publish the workflow so that others can use it:</p>\n<ol>\n<li>Click 'Workflow' from the top menu. The list (currently only one) workflows appears.</li>\n<li>Click the arrow on the right of the button labelled 'Basic fastq QC'. The menu for that workflow will appear.</li>\n<li>Click 'Share or publish'. A page with sharing options titled \"Share or Publish Workflow 'Basic fastq QC'\" will load.</li>\n<li>Click 'Make Workflow Accessible and Publish'. The page will reload with both a direct link to the workflow and\nnew options to reverse the procedure and unpublish/make it inaccessble again.</li>\n<li>You can now view the pubished workflow by clicking 'Shared Data' and then 'Published Workflows' from the sub menu.</li>\n</ol>\n<p>There are several other options on the sharing page:</p>\n<ul>\n<li>'Make Workflow Accessible via Link' provides the link to the workflow (allowing others to import it) but does not\nlist it in the 'Shared Data'->'Published Workflows' list.</li>\n<li>'Share with a user' will share it with one or more users directly allowing them to import it. Users are selected\nby email and only users currently registered on this Galaxy server can be selected. After sharing, users will find the\nworkflow in their 'Workflow' page under 'Workflows shared with you by others'. Users not selected will not be allowed\nto access or import it.</li>\n</ul>\n<p>Many items can be published and/or shared in Galaxy: workflows, histories, visualizations, and pages (project web\npages created and edited from within Galaxy). See how in the\n<a href=\"http://vimeo.com/75934770\" target=\"_blank\" rel=\"noopener noreferrer\">Sharing and Publishing Screencast</a></p>\n<h4 id=\"workflow-notes\"><a href=\"#workflow-notes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Workflow notes</h4>\n<ul>\n<li>It's possible to change parameters when running workflows. For example, a user running our QC workflow could\nchoose to filter at the phred score of 40 and not 35.</li>\n<li>Output and intermediate datasets created by a workflow can be re-named automatically.</li>\n<li>Emails can be optionally automatically sent to users when workflows complete.</li>\n<li>Metadata such as dataset type and what columns represent can be altered automatically.</li>\n<li>Intermediate files can be hidden in a user's history making analysis a bit clearer.</li>\n<li>Almost every tool available from the Galaxy Tool Sheds or already installed on your server can be used in a workflow.</li>\n<li>It's possible to run and automate workflows via the command line or scripts using Galaxy's API.</li>\n</ul>\n<p>Again, see <a href=\"/learn/advanced-workflow/\">Creating Workflows and Advanced Workflow Options</a> for more information.</p>\n<h4 id=\"testing-our-qc-workflow\"><a href=\"#testing-our-qc-workflow\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Testing our QC workflow</h4>\n<p>Let's run our workflow to test it (we'll use the same data):</p>\n<ol>\n<li>From the home page, open the history options menu, and click 'Copy datasets'. The center panel will show an\ninterface allowing you to copy selected datasets.</li>\n<li>Select 'SRR1182403_1.fastq' and 'SRR1182403_2.fastq' on the left hand side.</li>\n<li>On the right hand side, in the field labelled 'New history named', enter 'Test'</li>\n<li>Click 'Copy history items' at the bottom of the page.</li>\n<li>You'll see a green info box at the top saying \"2 datasets copied to 1 history: Test\". Click the 'Test' history name\nlink.</li>\n<li>The page should reload with your new, current history named 'Test'.</li>\n<li>In the tool panel, at the bottom, click 'All workflows'. The center panel will load with a list of the available\nworkflows including (and most likely only) your 'Basic fastq QC' workflow. Click that 'Basic fastq QC' link.</li>\n<li>The center panel will load with options on how to run the 'Basic fastq QC' workflow.</li>\n<li>Select '1: SRR1182403_1.fastq' for the first 'Input dataset' (Step 1 on the page)</li>\n<li>Select '2: SRR1182403_2.fastq' for the second 'Input dataset' (Step 2 on the page)</li>\n</ol>\n<p>Note: this is where you might change the workflow parameters if desired. Each step can be expanded by clicking the\nyellow step box and will list the default parameters for the workflow. Many parameters will have an edit button to their\nright which allows the change (for example, expanding 'Step 4', you'll see the edit button next to 'Minimum Quality').\n11. Click 'Run workflow' at the bottom of the panel/form.</p>\n<p>You're history should now be populated by all the datasets that will be produced by the workflow and, one by one, the\njobs you ran originally by hand will now be run automatically on the input datasets.</p>\n<h2 id=\"br--9\"><a href=\"#br--9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a><br /></h2>\n<h2 id=\"more-resources\"><a href=\"#more-resources\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>More Resources</h2>\n<p>The following are great places to start when trouble shooting or planning an expansion of your new server:</p>\n<h3 id=\"galaxy\"><a href=\"#galaxy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Galaxy</h3>\n<ol>\n<li>A <a href=\"/search/\">custom Google search</a> is available to search all things Galaxy\nincluding: this hub, mailing lists, our biostar site, Galaxy's code documentation, and even the data on our Main\npublic server.</li>\n<li><a href=\"https://biostar.galaxyproject.org/\" target=\"_blank\" rel=\"noopener noreferrer\">The Galaxy Biostar</a> (now <a href=\"https://help.galaxyproject.org/\" target=\"_blank\" rel=\"noopener noreferrer\">help.galaxyproject.org</a>) site is a Q\\&#x26;A site designed on Istvan Albert's original\n<a href=\"http://www.biostars.org\" target=\"_blank\" rel=\"noopener noreferrer\">Biostars</a> site.</li>\n<li>Our Trello board (now replaced by <a href=\"https://github.com/galaxyproject/galaxy/issues\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub issues</a>), which can be used to track our development and allows you to vote on our priorities.</li>\n<li>A Wiki page for all support resources is here: <a href=\"/support/\">Support</a>.</li>\n</ol>\n<h3 id=\"unix-system-administration\"><a href=\"#unix-system-administration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Unix System Administration</h3>\n<ol>\n<li><a href=\"http://serverfault.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Serverfault</a> is a Q\\&#x26;A site for systems administration.</li>\n<li><a href=\"http://debian-handbook.info/browse/stable/\" target=\"_blank\" rel=\"noopener noreferrer\">The Debian System Administrator's Handbook</a> is a comprehensive guide\nto (one flavor) or Unix sysadmin.</li>\n</ol>\n<h3 id=\"advanced-configuration-for-production-scale-galaxy-servers\"><a href=\"#advanced-configuration-for-production-scale-galaxy-servers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Advanced Configuration for Production Scale Galaxy Servers</h3>\n<ol>\n<li><a href=\"/admin/config/performance/production-server/\">Running Galaxy in a production environment</a></li>\n<li>Nate Coraor's excellent page for the BioIT workshop on <a href=\"/events/bio-it-world2014/w14/\">Running a Local Galaxy Instance</a></li>\n</ol>\n"}},"context":{}}