{"hash":"91d4a83f9855c194893a1f5e294057505b0cd33d","data":{"article":{"id":"529bf02f46fea5c353d66d81b64e652e","title":"","tease":"","category":null,"date":null,"days":null,"contact":"","contact_url":"","authors":"","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"links":[],"image":"","images":{},"external_url":"","content":"<div class=\"toc-wrapper col-md-3\">\n<ul>\n<li>\n<p><a href=\"#galaxy-operations-help-information-python-version\">Galaxy Operations Help Information (Python Version)</a></p>\n<ul>\n<li><a href=\"#name\">Name:</a></li>\n<li><a href=\"#usage\">Usage:</a></li>\n<li><a href=\"#descriptions\">Descriptions:</a></li>\n<li><a href=\"#options\">Options:</a></li>\n<li><a href=\"#example\">Example:</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"body-wrapper col-md-9\">\n<h2 id=\"galaxy-operations-help-information-python-version\"><a href=\"#galaxy-operations-help-information-python-version\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Galaxy Operations Help Information (Python Version)</h2>\n<h3 id=\"name\"><a href=\"#name\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Name:</h3>\n<p>galaxyOps.py - Operations on Genomic Intervals, which is written in Python</p>\n<h3 id=\"usage\"><a href=\"#usage\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Usage:</h3>\n<p>galaxyOps.py bed_file_1 [[bed_file_2]|[-swcb...]]</p>\n<h3 id=\"descriptions\"><a href=\"#descriptions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Descriptions:</h3>\n<p>galaxyOps.py provides the same operation as C version galaxyOps.</p>\n<h3 id=\"options\"><a href=\"#options\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Options:</h3>\n<p>-s, --subSeg: Print segments that DO NOT overlap with the 2nd bed file</p>\n<p>-w, --subWhole: Print regions that DO NOT overlap with the 2nd bed file</p>\n<p>-c, --complement: complement of the regions of a bed file</p>\n<p>-b, --build=N: build of the input file ( only used for complement )</p>\n<p>-i, --interSeg: Return only overlapping segments of 2 input bed file</p>\n<p>-a, --interAll: Return whole regions from the 1st file, which overlap.</p>\n<p>-m, --minSize=N: minimum size of overlapping</p>\n<p>-o, --unionMerge: Merge any overlapping regions of 2 bed files</p>\n<p>-l, --unionLists: Lists all the original regions of 2 bed files</p>\n<p>-r, --restrict: Restrict region size by minSize and maxSize</p>\n<p>-x, --maxSize=N: maximum size of the region, only for -restrict</p>\n<p>-j, --joinLists: Join two regions from two input files side by side.</p>\n<p>-d, --covDensity: Coverage density of the region of two queries</p>\n<p>-p, --proximity: Find proximity regions between two queries</p>\n<p>-U, --upstream=N: Number of bps in upstream</p>\n<p>-D, --downstream=N: Number of bps in downstream</p>\n<p>-W, --within: Used for proximity</p>\n<p>-t, --cluster: Find clusters in one input file</p>\n<p>-z, --clusterSize=N: Size of cluster</p>\n<p>-N, --numRegion=N: Num of regions in a cluster</p>\n<p>-S, --clusterSingle: Clustering return single region</p>\n<p>-1, --chromCol=N: chrom column number of the 1st file (default = 0)</p>\n<p>-2, --startCol=N: start column number of the 1st file (default = 1)</p>\n<p>-3, --stopCol=N: stop column number of the 1st file (default = 2)</p>\n<p>-4, --strandCol2=N: strand col num of 2nd file (proximity only, default=5)</p>\n<p>-5, --chromCol2=N: chrom column number of the 2nd file (default = 0)</p>\n<p>-6, --startCol2=N: start column number of the 2nd file (default = 1)</p>\n<p>-7, --stopCol2=N: stop column number of the 2nd file (default = 2)</p>\n<p>-C, --chrom=N: Restrict to one chromsome</p>\n<h3 id=\"example\"><a href=\"#example\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example:</h3>\n<p>galaxyOps.py knowGenes.bed exons.bed -s > introns.bed</p>\n<p>Find subregions in file knowGenes.bed, that don't overlap with file exons.bed, and redirect the result to file introns.bed</p>\n</div>\n"}},"context":{}}