{"hash":"fe50d2d58b71effa03c01b08cdaab48b91e9d3d3","data":{"article":{"id":"3b256e38a8fb08c0b223e9b47420bfac","title":"External User Authentication","tease":"","category":null,"date":null,"days":null,"contact":"","contact_url":"","authors":"","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"links":[],"image":"","images":{},"external_url":"","content":"<div class=\"toc-wrapper col-md-3\">\n<ul>\n<li><a href=\"#activate-authentication-through-ldap\">Activate authentication through LDAP</a></li>\n<li><a href=\"#tell-galaxy-to-use-auth_conf-file\">Tell Galaxy to use auth_conf file</a></li>\n<li><a href=\"#configure-the-auth_conf-file\">Configure the auth_conf file</a></li>\n<li>\n<p><a href=\"#special-case-ad-in-cruk\">Special Case: AD in CRUK</a></p>\n<ul>\n<li><a href=\"#modifications-in-auth_conf-file\">Modifications in auth_conf file</a></li>\n</ul>\n</li>\n<li><a href=\"#migrating-to-galaxy-native-login\">Migrating to Galaxy-native login</a></li>\n</ul>\n</div>\n<div class=\"body-wrapper col-md-9\">\n<p>By default, Galaxy will manage its own users, allowing standard username/password login. However, it may be more useful at your site to tie into an external authentication system like CAS, LDAP, AD, PAM, etc.</p>\n<p>Galaxy supports LDAP and AD authentication natively, but you must still use upstream <a href=\"/admin/config/nginx-external-user-auth/\">Nginx</a> or <a href=\"/admin/config/apache-external-user-auth/\">Apache</a> for other authentication schemes like CAS.</p>\n<h1 id=\"activate-authentication-through-ldap\"><a href=\"#activate-authentication-through-ldap\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Activate authentication through LDAP</h1>\n<p>To be able to authenticate your users through the LDAP, we are going to use a configuration file to enter all the required informations.</p>\n<h1 id=\"tell-galaxy-to-use-auth_conf-file\"><a href=\"#tell-galaxy-to-use-auth_conf-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tell Galaxy to use auth_conf file</h1>\n<p>In <code>config/galaxy.yml</code>, uncomment the line <code>auth_config_file: config/auth_conf.xml</code>:</p>\n<pre><code># XML config file that allows the use of different authentication providers\n# (e.g. LDAP) instead or in addition to local authentication (.sample is used\n# if default does not exist).\nauth_config_file: config/auth_conf.xml\n</code></pre>\n<h1 id=\"configure-the-auth_conf-file\"><a href=\"#configure-the-auth_conf-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Configure the auth_conf file</h1>\n<p>Copy the <code>config/auth_conf.xml.sample</code> and name it <code>config/auth_conf.xml</code>:</p>\n<pre><code>cp config/auth_conf.xml.sample config/auth_conf.xml\n</code></pre>\n<p>Then configure it appropriately to your LDAP (the documentation in the sample file should be enough).</p>\n<h1 id=\"special-case-ad-in-cruk\"><a href=\"#special-case-ad-in-cruk\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Special Case: AD in CRUK</h1>\n<p>In CRUK, the Active Directory does not allow to get <code>sAMAccountName</code>.</p>\n<p>We had to find another solution to get the Authentication working, register properly and get the username.</p>\n<h2 id=\"modifications-in-auth_conf-file\"><a href=\"#modifications-in-auth_conf-file\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Modifications in auth_conf file</h2>\n<p>Here are the modifications we had to do in the <code>config/auth_conf.xml</code>:</p>\n<pre><code>&#x3C;bind-user>{email}&#x3C;/bind-user>\n&#x3C;bind-password>{password}&#x3C;/bind-password>\n&#x3C;auto-register-username>{usernameFromWhoami}&#x3C;/auto-register-username>\n&#x3C;auto-register-email>{email}&#x3C;/auto-register-email>\n</code></pre>\n<p>We can notice a new variable: <code>usernameFromWhoami</code></p>\n<p>Then, we had to modify the <code>lib/galaxy/auth/providers/ldap_ad_py</code> file to add this variable:</p>\n<p>After the line: <code>import logging</code>, we imported the regexp python library:</p>\n<pre><code>import re\n</code></pre>\n<p>Then, we fetched the username through the <code>whoami_s</code> ldap-python library:</p>\n<p>After the line <code>whoami = l.whoami_s()</code>:</p>\n<pre><code>p = re.compile(ur'[^\\\\]*$')\n\nusername_from_whoami = re.search(p, whoami).group()\nparams['usernameFromWhoami'] = username_from_whoami\n</code></pre>\n<p>Launch Galaxy, and try to login :).</p>\n<h1 id=\"migrating-to-galaxy-native-login\"><a href=\"#migrating-to-galaxy-native-login\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Migrating to Galaxy-native login</h1>\n<p>If you wish to migrate to a Galaxy-native login from an existing deployment with upstream Apache or Nginx providing the LDAP/AD connection, you will need to set <code>external = 'f'</code> in the <code>galaxy_user</code> table for all existing users.</p>\n</div>\n"}},"context":{}}