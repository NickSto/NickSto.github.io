{"hash":"c32ecfdb33b075b0057598b5b9118f3554a398cf","data":{"article":{"id":"8e088ceb89e0bb956fbcad5b24c4b084","title":"Customizing Galaxy CloudMan","tease":"","skip_title_render":null,"image":"","images":{},"contact":"","inserts":[{"name":"/cloudman/linkbox-horizontal","content":"<div style=\"margin-bottom: 15px; padding: 0 5px; background-color: #DFE5F9;\">\n<p>  <a href=\"/cloudman/\">CloudMan home</a> |\n<a href=\"/cloudman/getting-started\">Getting Started</a> |\n<a href=\"/cloudman/cluster-types\">Cluster Types</a> |\n<a href=\"/cloudman/capacity-planning\">Capacity Planning</a> |\n<a href=\"/cloudman/services\">Application Services</a> |\n<a href=\"/cloudman/sharing\">Cluster Sharing</a> |\n<a href=\"/cloudman/userdata\">Instance User Data</a> |\n<a href=\"/cloudman/customizing\">Customizing</a> |\n<a href=\"/cloudman/building\">Building on a private cloud</a> |\n<a href=\"/cloudman/troubleshooting\">Troubleshooting</a> |\n<a href=\"/cloudman/faq\">FAQ</a></p>\n</div>\n"}],"date":null,"content":"<slot name=\"/cloudman/linkbox-horizontal\" />\n\n## Adding system users to the cluster\n\nBy default, each CloudMan cluster comes with basic system users: *ubuntu*,\n*galaxy*, *root*. If you would like to add additional system users, we have\nprovided a script that will add any number of system users to the master node\nand any worker nodes. To create users, start by creating a file with a list of\nusers:\n\n```\nuser1,password1\nuser2,password2\n```\n\nPlace the file in a directory on a cluster-wide file system (e.g.,\n`/mnt/transient_nfs/`) and call the `add-cluster-users` script, passing the\nfull path to the file as a single argument: `add-cluster-users\n/mnt/transient_nfs/user_list.txt`\n\n<div class='center'>\n<a href='add-system-users.png'><img src=\"/src/images/screenshots/add-system-users.png\" alt=\"\" width=600 /></a>\n</div>\n\nOnce added, the users can ssh to the cluster using the specified password to\nauthenticate. If you need to add more users in the future, just edit the file\nto append the new user names and rerun the script.\n\nNote that this feature is available only on images released after Oct 2016.\n\n## Using custom CloudMan application\n\nWhen you launch a new CloudMan cluster, the most recent released version of the\napplication will be used. If you relaunch a previously existing cluster, the\nsame version of the CloudMan application will be reused as the last time the\ncluster was launched (even if a newer version of the application was released);\nthis is done to maintain the reproducibility principles of your cluster.\n\nWhen launching a cluster, the CloudMan application is automatically retrieved\nas a tar ball from a central location (currently, `cloudman` bucket on S3 for\nnew clusters or your cluster's bucket for previously existing clusters). To use\na custom version of CloudMan it is necessary to provide a custom version of the\napplication source code; depending on the intent, this can be done in one of\nthe following ways:\n\n* **For an existing cluster**: note down the cluster bucket from CloudMan Admin\npage and replace files `cm.tar.gz` and `cm_boot.py` in the bucket with your\ncustom version (see more below on this)\n\n* **For (any number of) new clusters**: create an S3 bucket and place\n`cm.tar.gz` and `cm_boot.py` files in that bucket. When launching a new\ncluster, provide the name of the bucket in the *Default bucket* form field on\nthe launcher application.\n\nFile `cm_boot.py` is available in the [CloudMan source code repository](https://github.com/galaxyproject/cloudman/blob/master/cm_boot.py).\nIf changes are required to this file, take a look at the module\n[cm/boot](https:// github.com/galaxyproject/cloudman/blob/master/cm/boot/__init__.py)\nand make changes there. Once done, generate the `cm_boot.py` script by invoking\nthe following command from the CloudMan root directory: `python\nmake_boot_script.py` and then upload the file to the appropriate bucket (see\nbelow).\n\nFile `cm.tar.gz` is a tar ball of the entire CloudMan repository. If you are\nediting an older version of the the application, first download the `cm.tar.gz`\nfile from your cluster's bucket and extract the archive, make desired edits,\nrecreate the tar.gz file and upload it to your cluster's bucket. If editing the\ndevelopment version from the source control repository, create the tar.gz file\nwith all the files while sitting in the application's root directory.\n\nWant an easier and faster way to upload your changes? Take a look at this\nrepository with scripts that make the process of updating and uploading\nrequired files easier: https://github.com/afgane/CloudMan-update-scripts\n\n## Customizing your Galaxy CloudMan cluster\n\nIt is possible to use the cloud infrastructure management functionality offered\nby CloudMan while customizing the default deployment it offers. In the context\nof Galaxy, this means that it is possible to run a custom version of Galaxy,\nuse your own set of tools, and reference genomes.\n\nKeep in mind that this page deals with the CloudMan-side of customizations and\nhow to ensure those changes get persisted across cluster invocations. See\n[this page](/src/cloudman/services/index.md) and then individual\nservices about additional information on how to customize the applications\nthemselves (you will probably want to do that before you do the actions\ndescribed on this page).\n\nNote that the process of customizing an instance may require use of the command line tools. In order to modify your cloud deployment, follow these steps:\n\n1. **Start a CloudMan cluster instance** by following instructions on the\n[getting started](/src/cloudman/getting-started/index.md) page\n\n1. **ssh to the EC2 instance and perform desired customizations.**<br />\nFrom the command prompt, connect to the newly created cluster using the\nfollowing command, filling in the appropriate details:\n```\nssh -o StrictHostKeyChecking=no -i <path to your private key> ubuntu@<instance public DNS>\n```\nNext, perform the desired changes to the system. The changes supported at this\nlevel of instance customization include modifications to the file systems\nmanaged by CloudMan. The available file systems are listed on the CloudMan\nAdmin console under entry *Persist changes to file system* and are mounted on\nthe underlying system under `/mnt` (e.g., `/mnt/galaxy`). Modifying contents of\nthese file systems allows you to customize your instance of Galaxy, install or\nmodify tools, as well as modify reference genomes used by Galaxy tools. As you\nperform the changes, you should respect the ownership of the directories;\ncurrently all of these are owned by galaxy user. Note that if you plan on\nmodifying the Galaxy application, stop the process first from the CloudMan\nAdmin console.\n\n1. **Use CloudMan Admin interface to persist changes to the file system.**<br />\nAfter you have completed all of the desired modifications, disconnect from the\nssh session so that your login cannot interfere with filesystem\nunmounts/remounts. On the CloudMan Admin console, click (under *Persist changes\nto file system*) on the name of the file system you wish to preserve and\nCloudMan will perform the required steps to persist any changes. Note that\ndepending on the amount of changes you performed to the given file system, this\nprocess may take a while (Amazon is making a snapshot of the EBS volume and\nthat can take a long time). Once the process completes, you can go back to\nusing the cluster as you normally would; all of the changes will have been\npreserved after you terminate & relaunch the cluster.\n"}},"context":{}}