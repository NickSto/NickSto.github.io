{"hash":"ef8aba8bb8a02457efb168ecda8caf9311205534","data":{"article":{"id":"b7c07ae2022acab8a848639a53c4887b","title":"Workflow Variables","tease":"","category":"","date":null,"days":null,"contact":"","contact_url":"","authors":"","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"redirect":"","links":[],"image":"","images":{},"inserts":[{"name":"/learn/linkbox","content":"<div class='linkbox'>\n<p><a href=\"/learn/screencasts/\">Screencasts</a><br>\n<a href=\"/learn/faq/\">FAQ</a><br>\n<a href=\"/learn/interval-operations/\">Interval Ops</a><br>\n<a href=\"/learn/managing-datasets/\">Datasets</a><br>\n<a href=\"/learn/galaxy-pages/\">Pages</a><br>\n<a href=\"/learn/share/\">Share</a><br>\n<a href=\"/ftp-upload/\">FTP Upload</a><br>\n<a href=\"/learn/user-accounts/\">Accounts</a><br>\n<a href=\"/support/\">Support</a><br>\n<a href=\"/learn/privacy-features/\">Data Privacy</a><br>\n<a href=\"/search/\">Search</a></p>\n</div>\n"}],"external_url":"","content":"table-of-contents\n=================\n\nend-table-of-contents\n=====================\n\n<slot name=\"/learn/linkbox\" />\n# Workflow Variables\n\n[Back to Advanced Workflow](/learn/advanced-workflow/)\n\nWhere are variables used?\n-------------------------\n\nVariables are used in the editor in the far right panel, under the section \"Edit Step Actions\".\n\nHow to identify the input datasets variables?\n---------------------------------------------\n\nThe screenshot allows us to visualize that the Tophat2 tool is selected and configured to expect 2 .fastq files. In the far right panel, when we search for 'Data input', the input variables appear right in front of it between quotes. (eg. **RNA-Seq FASTQ file, forward reads** Data input 'input1' (fastqsanger)). Therefore the input variables for .fastq files are input1 and input2.\n\n<div class=\"img-sizer\" style=\"width: 700px\">![workflow editor](/images/learn/workflow_editor_input_variables.png)</div> <br />*workflow editor showing the input variables names*\n\nUsage\n-----\n\nVariable syntax: `#{input_name}`\n\nFull usage:\n\n```\n\nProper syntax is:  #{input_file_variable | option 1 | option n}\n\n      where\n         input_file_variable = is the name of an module input variable (\"input_name\" is supported)\n         |  = the delimiter for added options. Optional if no options\n\n      options = basename, upper, lower\n         basename = keep all of the file name except the extension\n                    (everything before the final \".\")\n         upper = force the file name to upper case\n         lower = force the file name to lower case\n\n```\n\nRename output based on specified content\n----------------------------------------\n\nWhen you run a tool, the result will be new boxes on the 'History' panel with names like '42 Tophat2 on data 27 and data 26: accepted_hits'. It can be hard to keep track if you're running tens of samples using a workflow. You can rename the output based on the original input file name. In the section **Edit Step Actions**, you select 'Rename Dataset', choose the output and provide a new name. The new names can contain variables in order to tag the output. The screenshot shows the **accepted_hits** output being renamed to **`#{input_name}`**. For example, if your input filename is **sample42.fastq** the accepted_hits output will be named **sample42.fastq.bam**.\n\n<br />\n\n<div class=\"img-sizer\" style=\"width: 700px\">![workflow editor](/images/learn/workflow_editor_input_variables_renaming.png)</div> <br />*workflow editor showing the use of input variables in the renaming tool*\n\nSource\n------\n\n<https://github.com/galaxyproject/galaxy/blob/dev/lib/galaxy/jobs/actions/post.py>\n"}},"context":{}}