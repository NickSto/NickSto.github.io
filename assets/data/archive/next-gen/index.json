{"hash":"6a87f55bb3e5a997903b2c87cff72c00cc3c86c4","data":{"article":{"id":"97b71dec06e37091e32946776eb41265","title":"","tease":"","image":"","images":{},"category":null,"contact":"","date":null,"content":"<h2 id=\"next-gen-sample-tracking-system\"><a href=\"#next-gen-sample-tracking-system\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Next Gen Sample Tracking System</h2>\n<p>This describes configuration of a proposed user interface addition to existing <a href=\"http://main.g2.bx.psu.edu/u/rkchak/p/sts\" target=\"_blank\" rel=\"noopener noreferrer\">Galaxy sample tracking</a> functionality. The goal is to provide:</p>\n<ul>\n<li>An intuitive interface for sample submission by researchers.</li>\n<li>Sample management by sequencing technicians.</li>\n<li>Organizing of samples via projects, with full transparency on status to researchers.</li>\n<li>Full integration with the existing Galaxy analysis framework.</li>\n</ul>\n<p>See the <a href=\"http://bcbio.wordpress.com/2011/01/11/next-generation-sequencing-information-management-and-analysis-system-for-galaxy/\" target=\"_blank\" rel=\"noopener noreferrer\">detailed overview</a> and <a href=\"http://www.slideshare.net/chapmanb/nextgeneration-sequencing-request-management-system-in-galaxy\" target=\"_blank\" rel=\"noopener noreferrer\">Slides from GalaxyDev 2010</a> for more information. We welcome your feedback and thoughts.</p>\n<p>Once you follow the setup instructions below, the sample tracking system will be available from the top level menu of a logged in user as Lab -> Next gen sample submission.</p>\n<h3 id=\"setup\"><a href=\"#setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup</h3>\n<ol>\n<li>Get the latest sample tracking code using this <a href=\"http://bitbucket.org/chapmanb/galaxy-central\" target=\"_blank\" rel=\"noopener noreferrer\">fork that tracks the galaxy-main codebase</a>:</li>\n</ol>\n<pre><code>hg clone http://bitbucket.org/chapmanb/galaxy-central\n</code></pre>\n<ol start=\"2\">\n<li>Install PyYAML on the Python used to run Galaxy:</li>\n</ol>\n<pre><code>$ easy_install PyYAML\n</code></pre>\n<ol start=\"3\">\n<li>Examine the YAML configuration file in tool-data/nglims.yaml. This defines available request types, sample states and other details that will be used to populate the interface.</li>\n<li>Do the standard Galaxy setup by starting up Galaxy one time to create your local database.</li>\n</ol>\n<pre><code>$ sh run.sh\n</code></pre>\n<ol start=\"5\">\n<li>Enable the interface as the default in your universe_wsgi.ini file. These values should be in the [app:main] section of your configuration:</li>\n</ol>\n<pre><code>use_nglims=True\nnglims_config_file=tool-data/nglims.yaml\n</code></pre>\n<ol start=\"6\">\n<li>Add configured request types, forms and sample states to the database:</li>\n</ol>\n<pre><code>$ python scripts/nglims/add_ng_defaults.py universe_wsgi.ini\n</code></pre>\n<ol start=\"7\">\n<li>Setup an administration user with the instructions on the standard <a href=\"/admin/\">Galaxy Admin Interface</a>. Create a \"sequencing\" role with this admin user; see the [Galaxy security documentation for more details](/src/learn/Security Features/index.md). Assign that role to any users who will be doing the sequencing work and should have full access to the sample management tools. Regular users -- customers submitting samples -- have access to a limited subset of capabilities.</li>\n<li>For integrating Galaxy analysis scripts with the front-end, generate an API key for your user with \"sequencing\" permissions. First ensure that the API in enabled in your Galaxy universe_wsgi.ini configuration:</li>\n</ol>\n<pre><code>enable_api = True\n</code></pre>\n<p>Then, select 'User -> Preferences -> Manage API keys' and copy the generated key.</p>\n<ol start=\"9\">\n<li>Setup the post-processing analysis scripts, available from <a href=\"https://github.com/chapmanb/bcbb/tree/master/nextgen\" target=\"_blank\" rel=\"noopener noreferrer\">this GitHub repository</a> with full installation instructions. The API key from step 8 should be pasted as the galaxy_api_key in your post_process.yaml file.</li>\n</ol>\n"}},"context":{}}