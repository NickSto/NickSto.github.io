{"hash":"ef8aba8bb8a02457efb168ecda8caf9311205534","data":{"article":{"id":"c0684fd526481d7d7cb245a7ad803c23","title":"SciPy and scikit-learn integration into Galaxy","tease":"","category":"blog","date":"2017-10-10","days":null,"contact":"","contact_url":"","authors":"Björn Grüning","location":"","location_url":"","source_blog":"","source_blog_url":"","skip_title_render":null,"redirect":"","links":[],"image":"/src/blog/2017-10-10-scipy-galaxy/sci-py-kit-learn.png","images":{"sci-py-kit-learn.png":{"type":"image","mimeType":"image/png","src":"/assets/static/sci-py-kit-learn.f24eb84.29f6bac17af150875c1c96f2c3ab0319.png","size":{"width":220,"height":189},"sizes":"(max-width: 220px) 100vw, 220px","srcset":["/assets/static/sci-py-kit-learn.f24eb84.29f6bac17af150875c1c96f2c3ab0319.png 220w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 220 189' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ab35b756b329b59a5795d49fc3d98087'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ab35b756b329b59a5795d49fc3d98087)' width='220' height='189' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA3CAYAAAC8TkynAAAACXBIWXMAAAsSAAALEgHS3X78AAAVc0lEQVRo3u1ZB1QVR7%2bf3b1gLyg2iqhYQAFpFy5NBEXpoICiosQWe2KPmqixBEEERQXuBRQV1GhiTJ7xxTRf%2bpdC9KVpbC/vmGKMSUwswG3zf/%2bZ3b1c%2bDx%2banJivnPePefPzM7OLvP7/evMEvL/v3v/aXprSas%2bIbzfqk8ocegdjGPBguQaIAo9h4qSS4Do6BYktu4bKnQYGMnnObgHky6%2bI4ibf9y/M/AQIroGyoCwL7gESr2D4qW7PXP%2b8lWhu0%2bsxsFdK6zI1%2bNID9KufwTpOjDq3wN0a89w1LKOSG7B/LqDVzQh3f1agnYgRPIkpFs4AowhpBdO6uKP413tJw2IGCMRZ1%2bBk%2bkSSFrje0V37d9f68Q1SL5w9hG1iTME5ZaEZpDepk9oTb/QpEvB8ZOMI7JmQdLkxyF5ykKIGz8HwlJyfxkUkf5O2766lYQ49rO9tFegRu1K7iHEwSPs7wlecg8lxEXWPOns3aT11n2nOA%2bJORedNRemLc%2bHRRt2wrK8Mli%2bqcy6fFO5lbVL80r52KKNpfDI0k0QnjrN1Glg5G582kXmchQjkL9OcPsbWoFjX9SKqwLeabCise49RNeg17Vps2DGqq0wf32pedbqEvPMJ7dZp60sopOXbaaTlhTQKcsL6YxVxXT6qmLr9JXFltmrt5vmrSuFyUsLYUBU5i3SYcAU9rax8zYJGBBki0ISmDX8LX5t%2bqMLM%2b2zX1cfjaJ1nzaekVdHT18D01aXmrKXFlnGLd4C2UuLafK8fJqxqIjO2VAJiwr2wPQ15ZC6oADSH99MJy7fRsctKYJxiwvppCe2mXJX7YCAlNmAseAZ9tronJUC6ewl/y%2b3vwkBmj7hcqeHv2z27fsPbO0ZdWPEzA0wZkmJMX5uASQt2AJJjxXT2FkFNL/6Zbj07VVQf2aLBT784hLMK6iF4Y8WQMrCbTRxQRFNnF8IifM2WzOW7TD7pswDJDePc9svShKY9l2DRf7/XLVN1vdX/1wHyf4o9g6RTbNdnzZib93F4ImrIXZusSlyej4Me3QLHTa7mGqnbYbDb56yAf/k7GV45cOzcPG7a7axJ8pegoDcAoiZu41G4XNRjxYCvoOOnL/N7BadC6TToFw5MAbJZKsxxyNcJuIvD3x9lfzsppMUK6joPXo%2baGdsNfrl5IF/7mYaNK2Yeo7Ph3XVr3OQl678BmPWHgLvqTvB65Gd4DOjDJ6ofNNGQvqTNTBo0hYImr6V%2bucWUv8pBRD0SIFVO3UztBs8%2bjZp5%2b4igw8KakbCw/oJHmGyKXbx0rbxTYUB2fnWfuPyqOfEQjpgcgntl1MC/Sdvh%2b9/vgHUaoWgGSXgELsKuqeuB%2bfkp7mQiGXw6ObnOAHnv/uFz%2b%2bLzw3K3UEHTt5K2dwe6RtN3UYvBeLkuwO1nYgxoFyJBSJ3gb%2baiI4RM0kbzwhC%2bg6Xte8eesApbin0Gldk6p6xGZxTN1Kn%2bFVAtHMgJHcTB3f49U%2bBeE8DMXIhEN3jQMIWchEiFgHxmQnlR97l82qOfwjEbwa0HbECpNin6Ordb9DXPjlHz17%2bmebt2AekvXeJpm/4WswGw5WsID4UF9D0G8Z9X3Dy6CkNTvm9fUo%2btBm5kmpCZlDinwNC0FQgg3Mhbv5ODqzwwNtAgpeAJg61PmItytNcxJHYxqwGMmwVfPr1d3zuk6UvgqN2JoTmrINrv/5OFQ8xXcKYQdwjF/Byw2dUa5l83V%2bfFbqGZhHBcwTXPkblLCFwCoihs81kcAYDT0nIbBCjFgMJXQw%2buSV89SdPfQMkfA04JG0GMb4AyGgm%2bVykBOxHr4feE0rgp%2bu3%2bPzbDUaw%2b9Er136zDJ6QB8Rt2Lt8ETknHmI6HJJDyMAEToA4YNRmMmQskCGZZhI0lRLdXCCRS4AMfxLIyPVAYjfC6Ys/chTDljyLpGxA0EVAkraBlFrCRUjaClLKNrSEPHCbuBNqX/8cLnz7Mxz5r88hbl4J5Fcfp0NSF1lJ7wSQvBKuEhdtZ76OfjECJ8H1LybC2R0LEt8cHgBFr6QXyNCJgODNCJ6SKAxWMWuAxD0DUhICjcFaYM2LnACjyQIrqt8Hj6l7gCRsx3t4P7aI98W0UtCk7cTnCpFARhyKFon0R0K9p1DiM4lKQ8cDGZRkJX2jvflCPEeID6f2d8YNXUqFnP%2b9094kQdNQs3MsCJ6SWAQ/ahOQxGIgKTtATNfj9XaYvOUN%2bPVmo82mL3x/Hfa9%2bTXkbn0T3KbWoLUgIclIQnoZiCklQOLRVUZtxED4JEjoTkLILNm9mLX1i9XJ28bRD4eAVs59CJn0qhwEfbNOEh1Wa5GLLVzzozdx8yapCGRsJUiZu7iQ0aXQIbsaUjaeAMOJM3Duu9/sfRyqXj0LHcbvxmfLuDUQdAseI2IxYEYtx8wxnyLRlPhlA/EcKdffAxMeDgFtOzgTEr9VdgH/SS8oPm8mo/IoAy%2bg1sUMBJ1chZqsQEuoAsdxaPbpeD26HM0cAaZUgMu0AzBhy0mouyBXhB%2bfuwqtMnFOShm3HpKwBeduZO%2bmJGIRD65k6CQLpl%2bvh0oAaYcExK7hQVDyn1hIhj/FAp6ZJBRRaYxeBpq8C4KWHYcJRW9D/7lH0CUqQMqqRmtggpoeiwSlVMqEJBpg78nznIQVez7C9IjBEV3Bzgowtiy3knCsHwKm/EA6uctBsM8w4eHsArsPIFLITE6AxmdMNvf7%2bAKLJr2UkgQ9dRhfA1VvXGhm4rPK30cwetAgCWQMgh9bBcLY3bJlJFeA67SDfN6pi9e4G5A0lGQ5FiC5lESvtHBXCJh8ki9iIwiko8tDPATpEy4fWbXv6iZEr7gupGAQiy2x%2bi48Ss9%2bK/v3O2d%2bgkW76%2bB2o1lOg6teRkBIQqZCAicCrSFjN2jQIr758QZc%2b72huRskFlF0LXz3GjNPrUMyV/IFRCySiNTq4YBv1Wuw3MkDOQ7o5hwk8aUwc8fbZrVw2fzSWSDjMe/HVEJa/kk%2beOXX29AlByN%2baqVsCQieuQVJ3wWdJ9VAI6bJc99dR%2b2ja6SjpJVTtAJK4gspiUMSIhY3EKc%2bg2TzjxJI4BTbmhoNYbZWEaFRrxOxlVBERQT7eQ2GP3jE1i04QwlCPSPKXnifl6w36400Jf8tDIb7KMl%2bFlrlHELTr4CCI59xEv6z7jIGNwP3ex4H0lDbw3fCU/vr%2bP2SY19yV5Gy0DXGVFIkgWUVE0nezvx/L/93a2/z/7ssZUBL4AzsXU%2bfEbTYoNdJTc/pbKTdnwu4BpAAbHHN3BVOHD1g%2bOSbW%2bAy/bCJJO0BzaRDjABKxh0AkombmNRd8O5XVzjIF/7xDQye/zy0y96LmeAgbDh0mo/fajCB%2b4zDSEo1FbL2UpLBrMNgRSJYJvgdUXPti738BYDrzYDbrw2vNSieKBEocSgxKL4oHewtpkEv72YfiAD118O5qxqJnUn4kjMk8xBosmtNHPj4A0hALRXHIQFpu8B5Si18cuEnW2D85UZTYXQdi6SIlRgjkqqoNL6Wkix0lYxqK8ncaxVSS0HyCJ/DY056mdgEQifZAXJAScOxGmzPoxhhVzjA7gguRkMYNOrDfsDxoyjpds9JdtZx70QIgkA8ervL5xLadL4oZCJIjF19jUzEtJdVYyZZKpA9VMzaQ5nvS2j28wzvw8nPvodLGPQ%2bPv8TPHP4NHR/ZD/FVEmlceg6WbX4/D4rGX/QKmbtAwfvxO3c7QH4/zPtHk6YGSsAmF8vaDDoLsJeBLsvEhhwBhg1bMV7FhTWgrUKCdkbyQWv/8Gswp4EnM/eex8HIkjCKx9elrflY59RNROOJfFlMvF5QO1bUIsouykGPCqydkwVBjSWLsvlQJdsoGRkKSOHSowkJAsJMJNJL/JiynFQ3E6ZW/kHB2OEer1OUBYejVo9AzVRHDRem9ECzAwwapNin%2bJ9bFH0vG%2bV54SZYU8Em88kjb9Lr5Bw3%2b4g2BVjI9erFwOI34QTrBwm2RgE0YwRuAV9mfmzVcqopMJYDHDpFbzFUtkqjN2FRO2xkAmHQcg5ys4Nrjv29F5o/5/guRgbEbjgtap544JNqpYZWBk8F2gSXcsxk7kyTCUuxt4SWGB88J9Ximj7DNal3ywSMusLklTMrAFjwkFQXIL5N%2bWCJo6xAljGEDL3gBS37pbjkNRnHQgJbAb%2bWJxg57f7YH8UKKDNKvB/Bn1HsZ9nZgQgYVew39HmUvoHIQAtQVR8lLTqaF%2bjO5H2PSbiNnY/7hjPkOGrfsP63sJ3jLhlJiPWNgqRi6%2bIATnvady1mzSE2P5756nPi%2bxFcHUOuVkmmz0udj8Dj/5qtAOiah3uQ%2bT5ep0RajmZ%2bbJl2WLLAx2TEtK%2bZ9NlwOSWmxVnNkoEKZ5oWmcQyTEdnxiOMpAd%2b6uTZiGRDm07iY5qdG5a1FOK5m3gG%2b5d83cggLuF1VLF3eBHNU1iQBUaDX/Gd8heQ2VWPCJEolrH3fZYU18SpbZOzUhD8GquHmqq4KmsCbD%2bgYDfyR0sSlBMbpka/5zts8cQuXhq21HoEpkp9cpYqumVtcKhW%2bJcTZuBYaKgcZT9W7J9DCbTIruzQMcWoxJwjKU4NH1TMxO%2bk%2bh1Te2dpGmOSoCJZRLU/FqFdM2fYgFBhjoSbPhU7uvrROzfkVm8J%2bE9TgKbH4TSINfqouL3flz7aLItTR4Xy6VZXx9mG2s0hP8TQc3my%2b8yM3JZcFVd7g8ToAJX%2bjbgwfo6J7z2RwlG6dviGQnJkC9wq9BgS0thm6AmUk13bOGq/0O9DbQ94HAb8IayYGgoD5H75dqmvm0%2bjwVmVhyhBRxT3e4PEcC1qP9U7YtK641yEOVacMUpCK78b8B%2bI2r7C2yfQeBuitUIzBrAQMhXhrFq2jsF1dxHLTbwCOBWmY5XdyoZHGBpoNIG4JxQMD47Dhqr42TgtWnQuDuWj9uRYE/AkT%2bJgLpmmsc2DQVCa86rwCkXJEK7%2b0sIrb3Axm6jLFbfUaLPUyszD1xMA3MBBTxlC2fXzCq%2b3RIMt8oRCIJu3JsAprfzwLh/LJheWwnGlx8D0%2btPgunkOjA%2bNxnb9WD%2boISTY%2bcasgswC9OH7VCD4AMToJq%2bqnnU8CAkhGqrPgPUrhHHrTYCZLGgmIIrToNu/yVGxAFe8hrUik8Xy6s9vax9FfzP20Pgkcju4OXSBt5Z4QdQpYX6/Rlg/rAUzJ9Ugun4IjC%2bNAevd4Ll3HEwnVgGpveKwPTqCmjYiQRURDQR2kTA/KbdpO6PWUCw3qb9fVzzhk8ZeGBkqOCDmvrsvhXdwKg78A3rH7TboU1TAhSr%2bCgWRMBqgVXJbtBKI8KuGQPg2OODAarD4PauODCilo3/MY8DNaEFGF%2baDY3PZkPjMewfnY7tfJv/K/GDkWpVXImjPjLXS1L3OgL709S/Nwuwi%2bgdMej9yLTfQvPQTPS2MdYaQ2suQKThgxz2jhuGyPVMO7hIM1usUfH3dq0kWDzaFfY9OhDeX%2bXL9wT1ZSFY2yM4NPF6FvzKAuHWjkCwGrQAlVq4iX2TPhgtKBzq0W0sleG8EGLlMPbPv7PCx8Fuoyfab/rs23shQA18XnaA7wy%2bSahChiWk%2bisINXx8ir2jnmUAuVQ1oa9TFqxeXujNqio4MHsQrE1z5zGAgWDATj/tD/Xo35aqCBzHOFE7DL4t0sJn6wIADgyDX3eEws8lIZywH4q1LJCa2fvP5QVsIfIBDz/iUgBLKF3uPwOo/q%2bvG8J8Wzb3u4KHliSFVtQBpkJnMPithv3DmNZNuFjKFjsprBt0aCPB8iQ3eHXJEAQWBV/nBcL0qB4wUdcNgvq0h18wRjDLycv0gEQ/J1gc7woL4lwgGO9d3aaFlx7zpm0cRXq9NNRSPKEvQ52igH4H5TkUP5RzKP%2bL0lG5J9yXC6CPu2L/pkpC8L8iQW%2bbYw6vPQeC4cYoMHgugP3R3AXUAsjbpS23gOLsvvxwg/ly/%2b6t4RhaxltP%2bPB7N9Eq8rM8eP/7rVq4jNpm/WEDOwIcjqZJSApeW%2beP7MXaK/y0SRKiESOgHEdZivITyi2UTvfsAi3rACThNDNpJdr/axJUAvZfAGfDdzPB0DMVaqOZz7KtK71YEMSBxHh3AraJYVqumTmAjz07ZxCMHNwZXlk0GH4vC%2bVjUzFTwNEYODBrIL8uHN%2bHwrFYyM/0oNOjexiHDerExquVpRcrBOSjOCv951vGgnuxAPsaYJWS503NfP3uBJgYAR6Gi09gOvSC6ii4Xa6zYjFEP1rtRxmQFYluHBiL3gw0GyvP9QRWMLHxhWjubOzFBV4AR4ZDqGcHdk0vY93w%2bQZ/ipqn3xQGQUd0JRyPVAD%2bDzY3lf4ChYBwFgdQ7v0rDEZ%2bezfojqnvulIAWe%2bBBJYezWFImrfhyxVIQJtbhohGZvqwO5x%2btTGAE%2bDj1hZeXzYEFozoBWmBXTnY3Iju8M5KX3gcwccNkUlJHtoF1o/tTRP8nPhzj0b3pLNjelJmPevH9L7Exhw14ovY7kAFmxDoRYWAEwoBS1AK1Thwv8WQRiFhjlLkGJvA193JHWwxIHTfOdAaPpnHnr%2blj/iIaRbdwMJIWJ7gSju31UCCrxN8vt6fW0FWcFfo0FqCoe7t4ChqnQEc4d2JOrd3oMcXDqZnngmELu00ZgySVhY04bnoAny1ryQKPyK4Y4qfH8BWKcHIMuz/grITpfU9B0El%2bje5gl6tCeqqlSLH1CIeKFJna5kFhGCJHG14L16pBVbIp0C6eqwDKKYweqM0lKVE3udjeyLo72wM3YSNY7VIzZWy4LUZr/nxFxyKBrorfL26Vhcnx9Z2Pq5pcejraNcXHrQkFuzG9rIihwVFJIlrmgkGTHOQ0mcEhVSfwYxQd32k4S0efX8xxHRF8D8yzbEyGOOBhQHC1syCI96zKGOWerlvrpcLJwvfM7C4gNkCifri%2bo6QETzff5ZCliW48nSNViCyQs8eqF3xI95XIXQPJIxHLZ9iGyFm5owQViqrbcieM8xK6pGQqWz%2bVsMmB%2bWYygsBPY%2bx4Fd2esPP//fJZ/wcID8hRg2r9zA7sD6zGnzmNWyz1TUgKZJR2exgOd2s0msJ9k737osAexIQuGh3zw9BzkAXKcC%2bAWUnylocG4NtNzZHZ/hIPQi1%2bxoU1g2vk7BdibIX%2bydw4/IB9r9Ckr7A9l2UQ%2bwMASUD77u3%2bGxm/zWJ/Dlnf3fNCM1IaH7ocXfyOGjQ91c/g4kPelanfBmWWn5B/st%2bdrWB3bV8RMYyhdKi1CmtkkKRKNwT2D5j2z57czA6iZ0YsRPcBrutK5o6uxYblC/FbL76PPvs9UeB/x9tffqruo2QKQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},"external_url":"","content":"<p><a href=\"http://www.numpy.org\" target=\"_blank\" rel=\"noopener noreferrer\">Numpy</a>, <a href=\"https://www.scipy.org\" target=\"_blank\" rel=\"noopener noreferrer\">SciPy</a>, <a href=\"http://scikit-learn.org\" target=\"_blank\" rel=\"noopener noreferrer\">scikit-learn</a>,\n<a href=\"http://pandas.pydata.org/\" target=\"_blank\" rel=\"noopener noreferrer\">pandas</a> - indeed the entire scientific Python stack - provides an awesome foundation for modern\nscientific computing. With Jupyter now an <a href=\"https://doi.org/10.1371%2Fjournal.pcbi.1005425\" target=\"_blank\" rel=\"noopener noreferrer\">integral part of Galaxy</a>\nits time to integrate all the powerful scientific Python libraries into Galaxy.</p>\n<p>Integrating all different modules of scipy or scikit-learn into Galaxy as tools seems to be a laborious task.\nIn the classical Galaxy way, we would need to have some kind of wrapper script, that needs to accept hundreds of\nparameters and call the correct scipy function. We would need to create the user interface (UI), and make this really useable\nand with a rock solid user experience (UX). The developer would have at least 2 places to update the code and given the\nhuge turnaround of the scientific Python stack, this is not an easy task.</p>\n<p>Here we present an easy way how we can solve these issues and integrate the scientific Python stack with a first class UX,\nkeeping the maintenance burden as low as possible.</p>\n<p>For this we will rely on two features:</p>\n<ul>\n<li>scipy unified API</li>\n<li><a href=\"https://docs.galaxyproject.org/en/latest/dev/schema.html#tool-configfiles\" target=\"_blank\" rel=\"noopener noreferrer\"><code>&#x3C;configfiles></code></a></li>\n</ul>\n<p>The scipy API is great, and for example allows us to use all cluster algorithms in a very similar way. Consider the following\ncode.</p>\n<pre><code class=\"language-python\">my_class = getattr(sklearn.cluster, 'insert_algorithm_name_here')\ncluster_object = my_class()\noptions = dict() # with your options\ncluster_object.set_params(**options)\n</code></pre>\n<p>Given this small snippet, we can create something like this for Galaxy.</p>\n<pre><code class=\"language-python\">selected_algorithm = params[\"input_types\"][\"algorithm_options\"][\"selected_algorithm\"]\nmy_class = getattr(sklearn.cluster, selected_algorithm)\ncluster_object = my_class()\noptions = params[\"input_types\"][\"algorithm_options\"][\"options\"]\ncluster_object.set_params(**options)\n</code></pre>\n<p>We can use Galaxy's <code>configfile</code> feature to create script on the fly and add a UI like the following.</p>\n<pre><code class=\"language-xml\">&#x3C;param name=\"selected_algorithm\" type=\"select\" label=\"Clustering Algorithm\">\n    &#x3C;option value=\"AgglomerativeClustering\">Hierarchical Agglomerative Clustering&#x3C;/option>\n    &#x3C;option value=\"AffinityPropagation\">Affinity Propagation&#x3C;/option>\n    &#x3C;option value=\"SpectralClustering\">Spectral Clustering&#x3C;/option>\n    &#x3C;option value=\"MiniBatchKMeans\">Mini Batch KMeans&#x3C;/option>\n    &#x3C;option value=\"KMeans\">KMeans&#x3C;/option>\n    &#x3C;option value=\"DBSCAN\">DBSCAN&#x3C;/option>\n    &#x3C;option value=\"Birch\">Birch&#x3C;/option>\n&#x3C;/param>\n</code></pre>\n<p>Now we have a few lines of general Python code, a few lines of specific code for the UI/UX and we are done. Just\nadd <code>&#x3C;option value=\"MeanShift\">MeanShift&#x3C;/option></code> to the UX code and your Galaxy tool will have a new clustering method.</p>\n<p>You can now <em>build a user interface and the Python code is \"written\" automatically</em> for you. Add functionality to the\nuser interface and the general Python code will take care of it.</p>\n<p>Have a look at our first <a href=\"https://github.com/bgruening/galaxytools/blob/master/tools/sklearn/numeric_clustering.xml\" target=\"_blank\" rel=\"noopener noreferrer\">clustering tool</a>\nor many other tools under <a href=\"https://github.com/bgruening/galaxytools/blob/master/tools/sklearn/\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/bgruening/galaxytools/blob/master/tools/sklearn/</a>.</p>\n"}},"context":{}}